<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="779" height="466"  borderColor="#15AD8F" xmlns:fc="http://www.adobe.com/2006/fc" title="Editar Consulta" xmlns:ns1="util.*">
	
	<mx:Script>
        <![CDATA[
        	import transferObjects.Consulta;
        	import services.AddConsultaService;
        	import transferObjects.ConfiguracionVacuna;
        	import transferObjects.Cliente;
        	import services.AddMascotaService;
        	import mx.controls.DateField;
        	import mx.controls.Alert;
            import mx.collections.ArrayCollection;
        	import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.ValidationResultEvent;            
  			import flash.display.Sprite;
		    import flash.events.*;
		    import flash.net.FileReference;
		    import flash.net.FileReferenceList;
		    import mx.rpc.events.ResultEvent;
			import mx.controls.Image;
		    import mx.core.Application;
		    import transferObjects.Person;
		    import pabellon.addCirugia;
		    import pabellon.addCirugia1;
		    import pabellon.AddCirugiaService;
		    import Policlinico.AddVacunacion;
		    import services.BusquedaService;
		    import services.configuracionServices;
		    import pabellon.EditCirugiaService;
		   
			
			[Bindable]
			private var files:ArrayCollection=new ArrayCollection();
		    private var vResult:ValidationResultEvent;
		    public var clienteBD:Cliente;
		    [Bindable]
		    public var tiposV:ArrayCollection;
		    [Bindable]
		    public var vetesV:ArrayCollection;
		    [Bindable]
		    public var ayudantesV:ArrayCollection;
		    [Bindable]
			private var clientes:ArrayCollection;
			[Bindable]
			private var cliente2:ArrayCollection;
			
			//editando para cargar las consultas
			[Bindable]
			private var consultas:ArrayCollection = new ArrayCollection;
			
		    [Bindable]
			private var consultas2:ArrayCollection;
			
		    /**
			* Lista de amscotas del cliente asociado
			*/
		    [Bindable] 
		    public var mascotas:ArrayCollection = new ArrayCollection();
		    
		    [Bindable] 
		    public var cliente:Person;
		      
		   [Bindable]private var vacunas:ArrayCollection;
			private var confs:configuracionServices= new configuracionServices();
			
			[Bindable]
			public var newConsulta:Consulta;

			/**
		 	 * 	@author  
			 * 	@Fecha  27 Octubre
			 * Funcion que busca un cliente, en la base de datos, para esto primero verifica 
			 * si el rut esta ingresado correctamente, en caso de estar incorrecto lo informa por pantalla.
			 * En caso contrario realiza las llamadas a la capa de java, la cual procesara la soliitud, y 
			 * retornara si el cliente existe o no.
			 * @param event Evento
			 */

        	
      
			/**
		 	* 	@author  
			* 	@Fecha  27 Octubre
			* Funcion que llena la tabla de mascotas asociadas al cliente, despues de haber obtenido el resultado
			* de la comunicacion con la capa logica.
			* @param event Evento
			*/
	        private function ini():void{
	     
	           	consultas.removeAll();
	           	getConsultas();
	           	consultas.refresh();
	           	
				
	        }
	         
	
			public function getConsultas():void{
				//Alert.show("entro getConsultas");
				var addConsultaService:EditarConsultaService = new EditarConsultaService();
				addConsultaService.addEventListener(ResultEvent.RESULT,getEditConsultasResult);
				
				addConsultaService.getAllConsultas(nombreRutIn.rutClienteInput.text+nombreRutIn.rutClienteDVInput.text);
				//Alert.show("no coopera");
			}
			
			
			public function getEditConsultasResult(event:ResultEvent):void{
				
				consultas = event.result as ArrayCollection;
				
				//Alert.show("getEditConsultasResult");
				
				
			}
			
			
			
			/**
		 	* 	@author  
			* 	@Fecha  27 Octubre
			* Metodo que procesa los datos ingresados en este panel, y muestra el panel 
			* en donde se realiza la edicion, cargando los datos correspondientes, 
			* para que el otro panel posea todos los datos.
			*/
			public function regConsulta():void
			{
				
				if(dg.selectedItem){
					var newConsultaUpdate:EditarConsultaUpdate = Application.application.editConsultaUpdate;
					newConsulta = new Consulta;
					newConsulta.anamnesis   = dg.selectedItem.anamnesis;
					newConsulta.costo       = dg.selectedItem.costo;
					newConsulta.fecha	    = dg.selectedItem.fecha;
					newConsulta.hora        = dg.selectedItem.hora;
					newConsulta.nombre      = dg.selectedItem.nombre;
					newConsulta.responsable = dg.selectedItem.responsable;
					newConsulta.rut			= dg.selectedItem.rut;
					newConsulta.servicio    = dg.selectedItem.servicio;
					
					
					
					Application.application.editConsulta.setVisible(false,false);
					newConsultaUpdate.carga(newConsulta);
					Application.application.editConsultaUpdate.setVisible(true,false);
					
				}
				else{
					this.labelMessage.text="Seleccione una Consulta para editar.";
				}
				
			}
			
			/**
		 	* 	@author  
			* 	@Fecha  27 Octubre
			* Metodo que inicializa todos los valores y variables de este panel.
			*/
			public function iniciarPanel():void
			{
				cargarDatos();
				
				this.mascotas=new ArrayCollection();
				this.consultas=new ArrayCollection();
				this.consultas2=new ArrayCollection();
				this.dg.doubleClickEnabled=true;
				this.nombreRutIn.getAllClientes();
				this.nombreRutIn.rutClienteInput.text="";
				this.nombreRutIn.rutClienteDVInput.text="";
				this.nombreRutIn.inputClienteNombre.text="";
				this.nombreRutIn.inputClienteNombre.typedText = "";
				
			}
			
		
		   public function getAllClientes():void
		   {
		   		var busquedaService:BusquedaService = new BusquedaService();
		   		busquedaService.addEventListener(ResultEvent.RESULT,getAllClientesResult);
				busquedaService.getAllClientes();
		   }
		   
		   /**
			*   @author  
			* 	@Fecha  02 Noviembre
			* Metodo que almacena el resultado del metodo anterior en el arraycollection cliente2.
			* Y llama a la funcion concatena.
			*/
		   public function getAllClientesResult(event:ResultEvent):void
		   {
		   		cliente2 = event.result as ArrayCollection;
		   		
		   		concatena();
		   }
		   
		   /**
			*   @author  
			* 	@Fecha  02 Noviembre
			* Metodo que concatena el apellido paterno, con el apellido materno, y el nombre, para mostrarlo 
			* en el autocomplete, para buscar al cliente por el apellido.
			*/
		   public function concatena():void
		   {
		   		clientes = new ArrayCollection();
		   		var i:int;
		   		var max:int = cliente2.length;
		   		
		   		for(i=0;i<max;i++){
		   			var cli:Cliente = cliente2.getItemAt(i,0) as Cliente;
		   			var cli2:Cliente = new Cliente();
		   			cli2.nombre = ""+cli.apellido+" "+cli.apellido2+" "+cli.nombre;
		   			clientes.addItem(cli2);
		   		}
		   		clientes.refresh();
		   }
		   

     		
     		public function cargarDatos():void
     		{ 
     			confs.getConfiguracioneVacunas();
     			confs.addEventListener(ResultEvent.RESULT,cargarDatosR);
     		} 
     		
     		public function cargarDatosR(event:ResultEvent):void
     		{
     			vacunas = event.result as ArrayCollection; 
     		}
     		
     		public function cancela():void{
     		
     		   this.visible = false;
     		   this.reset();
     		   Application.application.panelClinicaPrincipal.setVisible(true,false);
     		}
     		public function reset():void{
     			consultas = new ArrayCollection();
     			nombreRutIn.inputClienteNombre.text = "";
     		    nombreRutIn.rutClienteInput.text = "";
     		    nombreRutIn.rutClienteDVInput.text = "";
     		}
				
        ]]>
    </mx:Script>
	
	
	
	<mx:Label x="176" y="399" width="407" height="17" id="labelMessage" textAlign="center" fontWeight="bold"/>
	<mx:Label x="25" y="10" text="Cliente:" width="84.75" fontWeight="bold"/>
	<mx:DataGrid id="dg" color="0x323232" width="710" rowCount="3" y="91" x="25" variableRowHeight="true" dataProvider="{consultas}" itemDoubleClick = "{regConsulta()}"  visible="true" height="253">
	    <mx:columns>
	        <mx:DataGridColumn dataField="nombre" headerText="Nombre" editable="true" width="100"/>
	        <mx:DataGridColumn dataField="rut" headerText="Rut" width="100"/>
	        <mx:DataGridColumn dataField="responsable" headerText="Responsable" width="100"/>
	        <mx:DataGridColumn dataField="servicio" headerText="Servicio" width="100"/>
	        <mx:DataGridColumn dataField="fecha" headerText="Fecha" width="100"/>
	        <mx:DataGridColumn dataField="hora" headerText="Hora" width="100"/>
	        <mx:DataGridColumn dataField="anamnesis" headerText="Anamnesis" width="100"/>
	        <mx:DataGridColumn dataField="costo" headerText="Costo" width="100"/>
	    </mx:columns>
	</mx:DataGrid>
	<mx:Button x="522" y="353" label="Visualizar" visible="true" id="registrar" click=" regConsulta()" width="102" height="23"/>
	<mx:Button x="632" y="353" label="Cancelar" width="103" id="cancelar" visible="true" height="23" click=" cancela()"/>
	
	<mx:Label x="25" y="65" text="Consultas:" width="112.75" fontWeight="bold"/>
	<ns1:BuscadorNombreRut x="25" y="27" id="nombreRutIn" keyFocusChange=" {getConsultas()}" mouseFocusChange="{getConsultas()}">
	</ns1:BuscadorNombreRut>
	
</mx:Panel>
