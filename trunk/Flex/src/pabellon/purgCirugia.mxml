<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="779" height="466" title="Anular Cirugía" borderColor="#15ad8f" xmlns:fc="http://www.adobe.com/2006/fc">
	<mx:Script>
		<![CDATA[
		//=======================================================================
		// FECHA CREACIÓN: 14-10-09
		// AUTOR: Esteban Cruz
		// Comentario: Se declara la clase cirugia, una vez instanciada 
		// representa el componente de la capa de interfaz
		//=======================================================================
		
			import mx.controls.List;
			import mx.events.ListEvent; 			
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
            import mx.controls.CheckBox;    
            import mx.events.CloseEvent;
            import mx.rpc.events.ResultEvent;
            import mx.core.Application;
			
			import transferObjects.CirugiaPurg;
			import services.PurgCirugiaService;
			[Bindable]
			private var cirugias:ArrayCollection;
			
			
			/**
			 * Evento del boton "Volver", el cual redirige la página
			 * a anterior (listado de clientes con cirugias acitadas)
			 */
			public function actionVolver():void
			{
            	Application.application.purgCirugia.setVisible(false,false);
            	Application.application.purgCirugiaV.setVisible(true,false);
			}
			
			/**
			 * Se obtienen todas las cirugías que están registradas en 
			 * la base de datos para ser mostrados dentro del datagrid
			 */
			public function getAllCirugiasU(rut:String):void
		    {
		   		var purgCirugiaService:PurgCirugiaService = new PurgCirugiaService();
		   		purgCirugiaService.addEventListener(ResultEvent.RESULT,getAllCirugiasResult);
				purgCirugiaService.getAllCirugiasU(rut);
		    }
		   
		    /**
			 * Una vez obtenidas todas las cirugías que están registradas 
			 * en la base de datos, son mostrados dentro del datagrid
			 */
		    public function getAllCirugiasResult(event:ResultEvent):void
		    {
		   		cirugias = event.result as ArrayCollection;
		    }
			
			/**
			 * Se anulan las cirugías que están seleccionadas en el
			 * grid, desde la base de datos
			 */
			public function setEstado(estado:String):void
			{
				var purgCirugiaService:PurgCirugiaService = new PurgCirugiaService();
				purgCirugiaService.setEstado(estado);
			}

            /**
			 * Mensaje para purgar las cirugías que están seleccionadas
			 * en el grid, desde este mismo
			 */
           	private function deleteRow():void 
           	{
         		if(motivo.text==""){
         			Alert.show("Debe ingresar un motivo para anular la cirugía","Campo incompleto");
         		}
         		else{
					Alert.show("¿Está seguro que desea anular la(s) cirugía(s)? ","Confirme anulación ", Alert.YES | Alert.NO, this, delRowHandler, null, Alert.NO);
         		}
			}
			
			/**
			 * Se purgan las cirugías que están seleccionadas en el
			 * grid, desde este mismo
			 */
			private function removeTaskRecord():void
            {
                var allRows:int = cirugias.length;
                var cirugia:CirugiaPurg = new CirugiaPurg();
                
                for (var i:int = 0; i < allRows; i++){
                    if (cirugias[i].sel)
                	{
                        cirugia = cirugias[i] as CirugiaPurg;
                        setEstado(cirugia.tipo);
                        
                        cirugias.removeItemAt(i);
                        allRows = cirugias.length;
                        tablaCirugias.dataProvider = cirugias;
                        i=-1;
                    }   
                }
                motivo.text=" ";
                barraMsj.text="Cirugía(s) anuladas(s)";              
            }
			
			/**
			 * Una vez seleccionado SÍ o NO en el mensaje
			 * se llama a la función que anula
			 */
			private function delRowHandler(evt:CloseEvent):void {
			    if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
			  removeTaskRecord();
			}
			
			/**
			 * Se toma el objeto cliente con sus respectivos 
			 * datos, y se insertan en los campos correspondientes
			 * Cliente y Mascota
			 */
			public function setDatos(cirugia:CirugiaPurg):void
			{
				getAllCirugiasU(cirugia.rutCliente);
         		cNom.text=cirugia.nombreCliente;
         		cRut.text=cirugia.rutCliente;
         		cApP.text=cirugia.apellidoPaterno;
         		mNom.text=cirugia.nombreMascota;
         		mRaz.text=cirugia.raza;
         		mSex.text=cirugia.sexo;
         	}
            
		]]> 
  	</mx:Script>	
  	
  	<!-- Barra estado -->
	<mx:Label width="407" height="17" id="barraMsj" textAlign="center" fontWeight="bold" x="169" y="390"/>
	
	<!-- Tabla con datos -->
	<mx:DataGrid x="10" y="152" width="739" height="160" id="tablaCirugias" dataProvider="{cirugias}" toolTip="Seleccion la(s) cirugía(s) que desea anular">
		<mx:columns>
			<mx:DataGridColumn width="20" headerText="" dataField="checkbox" id="checkbox" draggable="false">
			 	<mx:itemRenderer>
                        <mx:Component>
                            <mx:CheckBox click="data.sel=!data.sel"  selected="{data.sel}"/>            
                        </mx:Component>
             	</mx:itemRenderer>
            </mx:DataGridColumn>			
			<mx:DataGridColumn width="121" headerText="Tipo cirugía" dataField="tipo" id="tipo" draggable="false"/>
			<mx:DataGridColumn width="140" headerText="Veterinario" dataField="veterinario" id="veterinario" draggable="false"/>
			<mx:DataGridColumn width="140" headerText="Ayudante" dataField="ayudante" id="ayudante" draggable="false"/>
			<mx:DataGridColumn width="120" headerText="Servicio" dataField="servicio" id="servicio" draggable="false"/>
			<mx:DataGridColumn width="99" headerText="Hora" dataField="hora" id="hora" draggable="false"/>
			<mx:DataGridColumn width="99" headerText="Fecha" dataField="fechaCirugia" id="fechaCirugia" draggable="false"/>
		</mx:columns>
	</mx:DataGrid>
	
	<mx:Button x="523" y="350" label="Anular" id="purgarCirugia" click="{deleteRow()}" toolTip="Anula la(s) cirugia(s) seleccionada(s)" width="102" height="23" cornerRadius="6"/>
	<mx:Button x="647" y="350" label="Volver" id="volver" toolTip="Vuelve al panel anterior" width="102" height="23" cornerRadius="6" click="actionVolver()"/>
	<mx:Label x="24" y="36" text="Nombre:" width="78"/>
	<mx:Label x="10" y="9.95" text="Cliente" width="97" fontWeight="bold"/>
	<mx:Label x="393" y="9.95" text="Mascota" width="98" fontWeight="bold"/>
	<mx:Label x="24" y="87.95" text="Rut:" width="78"/>
	<mx:Label x="407" y="87.95" text="Sexo:" width="78"/>
	<mx:Label x="407" y="36" text="Nombre:" width="63.4" height="17.931034"/>
	<mx:Label x="24" y="62" text="Apellido Paterno:" width="103"/>
	<mx:Label x="407" y="61.9" text="Raza:" width="78"/>
	<mx:Text x="10" y="124" text="Atenciones Cirugías&#xd;&#xa;" fontWeight="bold" height="20"/>
	<mx:Text x="135" y="62" id="cApP" width="150"/>
	<mx:Text x="135" y="36" id="cNom" width="150"/>
	<mx:Text x="135" y="87.95" id="cRut" width="150"/>
	<mx:Text x="478.4" y="36" id="mNom" width="150"/>
	<mx:Text x="478.4" y="61.9" id="mRaz" width="150"/>
	<mx:Text x="478.4" y="87.95" id="mSex" width="150"/>
	<mx:TextInput x="61" y="320" width="688" id="motivo" toolTip="Ingrese el motivo por el cual desea anular la(s) cirugía(s)"/>
	<mx:Text x="10" y="322" text="Motivo" fontWeight="bold"/>
</mx:Panel>
