<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="779" height="466" title="Visualizar Ficha" borderColor="#15AD8F" >
	<mx:Script>
		<![CDATA[
		//=======================================================================
			// FECHA: CREACIÓN: 21 Septiembre
			// AUTOR: jimmy muñoz
			// Panel de selección de usuario, para proceder a editar los datos de éste.
			//=======================================================================

			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			import administracion.EditFichaService;
			import transferObjects.Mascota2;
			
			import flash.events.MouseEvent;
            import mx.events.FlexEvent;
            import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			
			[Bindable]
			//private var mascRec:Mascota;
			private var usuarios:ArrayCollection;
			private var usuars:ArrayCollection;
			private var usuars2:ArrayCollection;
			public var newRegUsuar:EditUsuarioUpdate;
			
			
			/**
		 	 * 	@author  "Jimmy Muñoz"
			 * 	@Fecha  28 Septiembre
			 *  @Descripcion Metodo que recibe el panel EditUsuario (newRegUsuar), para almacenarlo, 
			 * inicializa la variable personService, para poder llamar a los metodos de este
			 * para lograr comunicarse con las clases y metodos de java.	 		
			 * */
			public function getFichas(regUsuarioIn:EditUsuarioUpdate):void
			{
				var editandoServ:EditFichaService = new EditFichaService();
				editandoServ.addEventListener(ResultEvent.RESULT,getFichasEResult);
				//editandoServ.getFichaE();
				/*
				labelMessage.text="";
				newRegUsuar = regUsuarioIn;
				var personService:UsuarioEditService = new UsuarioEditService();
				personService.addEventListener(ResultEvent.RESULT,getAllUsuariosEResult);
				personService.getAllUsuariosE();
				*/
			}
			
			/**
		 	 * 	@author  "Jimmy Muñoz"
			 * 	@Fecha  28 Septiembre
			 *  @Descripcion Metodo que El resultado de la llamada en el metodo anterior, a las clases de java
			 * es recibido en este metodo y almacenado en un ArrayCollection, el cual sera el dataProvider 
			 * del datagrid, para mostrar los datos de los usuarios que existen en el sistema.	 		
			 * */
			private function getFichasEResult(event:ResultEvent):void
			{
				/*mascRec = event.result as Mascota;
				this.nombCli.text = mascRec.nombreDueno;
				this.comunaCli.text = mascRec.comuna;
				this.dirCli.text = mascRec.direccion;
				this.fechaMas.text = mascRec.fechaNacimiento;
				this.fonoCli.text = mascRec.telefono;
				this.rutCli.text = mascRec.rut;
				this.nombMas.text = mascRec.nombre;
				this.razaMas.text = mascRec.raza;
				this.sexoMas.text = mascRec.sexo;*/
				
				/*Tabla.doubleClickEnabled=true;
				usuarios = event.result as ArrayCollection;	
							
					*/			
			}
			
			
			
			/**
		 	 * 	@author  "Jimmy Muñoz"
			 * 	@Fecha  28 Septiembre
			 *  @Descripcion Metodo que consulta si se cumple las devidas condiciones para editar un usuario, 
			 * llamando al metodo itsOk, si esto se cumple procesa los datos que fueron ingresados en el objeto
			 *  person para ser eviados a los metodos de la clase person service, para enviarlos a las otras
			 * capas, y guardar los cambios.		 		
			 * */
			public function insertFichaE():void
			{
				/*if(newRegUsuar.itsOk()){
					var person:Usuario= new Usuario();
					person.nombre=newRegUsuar.nomb.text;
					person.apellidoPaterno=newRegUsuar.apat.text;
					person.apellidoMaterno=newRegUsuar.amat.text;
					person.usuario=newRegUsuar.usua.text;
					person.servicio=newRegUsuar.serv.text;
					person.cargo=newRegUsuar.carg.text;
					person.contrasena=newRegUsuar.cont.text;
					person.permisoEditar=newRegUsuar.pedi.selected;
					person.permisoEliminar=newRegUsuar.peli.selected;
					person.permisoPurgar=newRegUsuar.ppur.selected;
					person.permisoRegistrar=newRegUsuar.preg.selected;
				
					var personService:UsuarioEditService=new UsuarioEditService();
					personService.addEventListener(ResultEvent.RESULT,insertUsuarioEResult);
					personService.insertUsuarioE(person);
				}*/
				
			}
			
			/**
		 	 * 	@author  "Jimmy Muñoz"
			 * 	@Fecha  28 Septiembre
			 *  @Descripcion Metodo que recibe el resultado del metodo anterior, el cual actualiza los 
			 * datos del usuario seleccionado, y verifica si se almaceno correctamente.		 		
			 * */
			private function insertUsuarioEResult(event:ResultEvent):void
			{
				var result:int = event.result as int ;
				if(result>0)
				{
				   /*this.getAllUsuarios(newRegUsuar);
				   newRegUsuar.setVisible(false,false);
				   this.setVisible(true,false);
				   labelMessage.text="Ususario editado!";*/
				}
				else{
				   /*newRegUsuar.labelMessage.text="Ususario NO editado!";*/
				}
			}
	
		]]>
	</mx:Script>	
	
	<mx:DataGrid x="24.15" y="205" width="693" height="153" id="fichaTablaRegistro">
		<mx:columns>
			<mx:DataGridColumn width="90" headerText="Fecha" dataField="col1"/>
			<mx:DataGridColumn headerText="Costo" dataField="col2"/>
			<mx:DataGridColumn headerText="Servicio" dataField="col3"/>
			<mx:DataGridColumn headerText="Descripción" dataField="col3"/>
			<mx:DataGridColumn width="150" headerText="Responsable" dataField="col4"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:Button x="615.15" y="365" label="Cancelar" id="fichaCancelarEdit" width="102" height="23" cornerRadius="6">
	</mx:Button>
	<mx:Button x="505.15" y="365" label="Editar" id="fichaEditarficha" width="102" height="23" cornerRadius="6">
	</mx:Button>
	<mx:Label x="24.15" y="36" text="Nombre:" width="78"/>
	<mx:Label x="24.15" y="10" text="Datos cliente" width="97" fontWeight="bold"/>
	<mx:Label x="393.7" y="9.95" text="Datos mascota" width="98" fontWeight="bold"/>
	<mx:Label x="24.15" y="62" text="Rut:" width="78"/>
	<mx:Label x="393.7" y="87.95" text="Sexo:" width="78"/>
	<mx:Label x="393.7" y="114" text="Fecha nacimiento:" width="107"/>
	<mx:Label x="393.7" y="35.9" text="Nombre:" width="63.4" height="17.931034"/>
	<mx:Label x="24.15" y="88" text="Teléfono:" width="78"/>
	<mx:Label x="24.15" y="138.95" text="Dirección:" width="78" height="17.25"/>
	<mx:Label x="24.15" y="114" text="Comuna:" width="78" height="17.25"/>
	<mx:Label x="393.7" y="61.9" text="Raza:" width="78"/>
	<mx:Label x="24.15" y="179" text="Atenciones" fontSize="10" fontFamily="Verdana" fontWeight="bold"/>
	<mx:Label x="545.15" y="179" text="&lt; Anterior" fontSize="10" fontFamily="Verdana" fontWeight="bold"/>
	<mx:Label x="652.15" y="179" text="Siguiente &gt;" fontSize="10" fontFamily="Verdana" fontWeight="bold"/>
	<mx:TextInput x="127.1" y="34" width="217.75" editable="false" id="nombCli"/>
	<mx:TextInput x="127.1" y="60" width="111" editable="false" height="20" id="rutCli"/>
	<mx:TextInput x="246.1" y="60" width="19.75" editable="false" height="20"/>
	<mx:TextInput x="127.1" y="86" width="138.75" editable="false" height="20" id="fonoCli"/>
	<mx:TextInput x="127.1" y="112" width="138.75" editable="false" height="20" id="comunaCli"/>
	<mx:TextInput x="127.1" y="136.95" width="217.75" editable="false" height="20" id="dirCli"/>
	<mx:TextInput x="517.25" y="33.9" width="138.75" editable="false" height="20" id="nombMas"/>
	<mx:TextInput x="517.25" y="59.9" width="92.9" editable="false" height="20" id="razaMas"/>
	<mx:TextInput x="517.25" y="87.9" width="92.9" editable="false" height="20" id="sexoMas"/>
	<mx:TextInput x="517.25" y="112" width="92.9" editable="false" height="20" id="fechaMas"/>
	<mx:Label x="165" y="396" width="407" height="17" id="ltexto" fontWeight="bold" textAlign="center"/>
	
</mx:Panel>
