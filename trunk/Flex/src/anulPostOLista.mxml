<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="779" height="466" borderColor="#15AD8F" title="Anular Atención Post-Operatorio" x="241" y="133" xmlns:fc="http://www.adobe.com/2006/fc">
	<mx:Script>
		<![CDATA[
			//=======================================================================
			// FECHA CREACIÓN: 11/10/09
			// AUTOR: Erwin Díaz
			// Comentarios: Muestra datos de la mascota con sus respectivas atenciones
			// en post-operatorio
			//=======================================================================
		
			import services.PostOperatorioService;
			import transferObjects.PostOperatorio;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import transferObjects.Mascota2;
			import flash.events.MouseEvent;
            import mx.events.FlexEvent;
            import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.core.Application;
			public var select:int = 0;
			
			
			[Bindable]
			private var atenciones:ArrayCollection;
			
			public function verSelect(seleccionado:int):void
			{
				if(seleccionado == 0){
					verActivas.enabled = false;
					verNulas.enabled = true;
					select =0;
				}
				if(seleccionado == 1){
					verActivas.enabled = true;
					verNulas.enabled = false;
					select = 1;
				}
			}
			/**
			 * Obtiene los datos de las atenciones que están 
			 * registradas en la base de datos
			 * 
			 */
			public function getAllDatos():void
			{
				verSelect(0);
				var visualizarPostoperatorio:PostOperatorioService = new PostOperatorioService();
				visualizarPostoperatorio.addEventListener(ResultEvent.RESULT,getAllDatosResult);
				visualizarPostoperatorio.getAllPostOperatorio();
			}	
			/**
			 * Obtiene el evento del resultado de la consulta
			 * hacia la base de datos
			 */
		    private function getAllDatosResult(event:ResultEvent):void
			{
				Tabla.doubleClickEnabled=true;
				atenciones = event.result as ArrayCollection;
			}
			
			public function filtrarNulas():void
			{
				verSelect(1);
				var visualizarPostoperatorio:PostOperatorioService = new PostOperatorioService();
				visualizarPostoperatorio.addEventListener(ResultEvent.RESULT,filtrarNulasResult);
				visualizarPostoperatorio.getAllPostOperatorioAnul();
			}	
			/**
			 * Obtiene el evento del resultado de la consulta
			 * hacia la base de datos
			 */
		    private function filtrarNulasResult(event:ResultEvent):void
			{
				Tabla.doubleClickEnabled=true;
				atenciones = event.result as ArrayCollection;
			}
			/**
			 * Se muestran los distintos tipos de búsqueda
			 * que el usuario puede hacer al momento
			 * de buscar una consulta, se pueden seleccionar
			 * distintos parámetro que coinciden con los datos
			 * del datagrid
			 */
			private function seleccionarBusqueda(event:Event):void
            {
            	setInvisibleInput();
            	getAllDatos();
				switch (comboBox.selectedLabel){
				case 'Nombre Mascota':		
					inputNombreMas.setVisible(true,false);
				break; 
				case 'Raza':		
					inputRaza.setVisible(true,false);
				break; 
				case 'Sexo':		
					inputSexo.setVisible(true,false);
				break; 
				case 'Rut':		
					inputRut.setVisible(true,false);
				break;
				case 'Nombre Cliente':
					inputNombreCliente.setVisible(true,false); 	
				break;
				case 'Apellido Paterno':
					inputApellidoPaterno.setVisible(true,false); 	
				break;
				}
            }
			
			/**
			 * Este método hace invisible los demás text imputs
			 * esto es necesario ya que se tiene distintos
			 * campos de búsqueda y es necesario contar con uno
			 * para cada tipo
			 */
			 private function setInvisibleInput ():void
            {
            	inputNombreMas.setVisible(false,false);
            	inputRaza.setVisible(false,false);
            	inputSexo.setVisible(false,false);
            	inputRut.setVisible(false,false);
            	inputNombreCliente.setVisible(false,false);
            	inputApellidoPaterno.setVisible(false,false);
            }
			
			
			
			
			/**
         	 * Función de prueba que llena el datagrgis sin necesidad de ir a la base de datos
         	 * 
         	 */	
		    private function updateTable():void
            {
            	atenciones = new ArrayCollection;
				atenciones.addItem({nomMascota:"lassie", razaMascota:"Pastor Collie", sexoMascota:"hembra", rut:"1234325", nombre:"Carlos", apellidoPaterno:"Moreno"});
            	atenciones.addItem({nomMascota:"Bengie", razaMascota:"Golden Retriver", sexoMascota:"macho", rut:"83323122", nombre:"Jose", apellidoPaterno:"Errazuriz"});
            	atenciones.addItem({nomMascota:"Balto", razaMascota:"Pastor Alemán", sexoMascota:"macho", rut:"93420012", nombre:"Miguel", apellidoPaterno:"Ponce"});
            	atenciones.addItem({nomMascota:"Fabi", razaMascota:"Maltes", sexoMascota:"hembra", rut:"102231001", nombre:"Cristian", apellidoPaterno:"Arce"});
            	Tabla.doubleClickEnabled=true;
            	Tabla.dataProvider = atenciones;
            	
            }
			/**
			 * Es llamada al hacer doble click en el data grid o al presionar el 
			 * botón visualizar, esta función llega al panel PurgarPostOperatorio de manera interna
			 * sin necesidad de pasar por el panel Veterinaria
			 * 
			 */
			public function editarAtencion():void
			{
				if(Tabla.selectedItem){					
					var newPurgarPost:anulPost = Application.application.AnulPostD;
					var anuladosVerPost:AnuladosVerPost = Application.application.anuladosVerPost;
					
					var newMascota:PostOperatorio = new PostOperatorio();
					newMascota.nombreMascota = Tabla.selectedItem.nombreMascota;
					newMascota.raza = Tabla.selectedItem.raza;
					newMascota.sexo = Tabla.selectedItem.sexo;
					newMascota.nombreCliente = Tabla.selectedItem.nombreCliente;
					newMascota.apellido = Tabla.selectedItem.apellido;
					newMascota.clienterut = Tabla.selectedItem.clienterut;
					
					
					this.setVisible(false,false);
					if(select ==0){
						newPurgarPost.resetVars();
						newPurgarPost.nomMascota.text = newMascota.nombreMascota;
						newPurgarPost.razaMascota.text = newMascota.raza;
						newPurgarPost.sexoMascota.text = newMascota.sexo;
						newPurgarPost.nombre.text = newMascota.nombreCliente;
						newPurgarPost.apellidoPaterno.text = newMascota.apellido;
						newPurgarPost.clienterut.text = newMascota.clienterut;
						newPurgarPost.getAllDatos();
						newPurgarPost.setVisible(true,false);
					}
					else if(select ==1){
						anuladosVerPost.resetVars();
						anuladosVerPost.nomMascota.text = newMascota.nombreMascota;
						anuladosVerPost.razaMascota.text = newMascota.raza;
						anuladosVerPost.sexoMascota.text = newMascota.sexo;
						anuladosVerPost.nombre.text = newMascota.nombreCliente;
						anuladosVerPost.apellidoPaterno.text = newMascota.apellido;
						anuladosVerPost.clienterut.text = newMascota.clienterut;
						anuladosVerPost.getAllDatos();
						anuladosVerPost.setVisible(true,false);
					}
				}

			}
			/**
			 * Al cancelar la operación se muestra un panel que solo tiene el 
			 * mensaje "seleccione una opcion del menú"
			 * 
			 */
			private function cancelando():void
			{
				this.setVisible(false,false);
				Application.application.panel2.setVisible(true,false);
			}
			
		]]>
	</mx:Script>
	<mx:Label x="10" y="353" text="Ver:" id="label7"/>
	<mx:LinkButton x="94" y="350" label="Nulas" width="58" fontWeight="normal" id="verNulas" click="{filtrarNulas()}" toolTip="Seleccione tipo de vista, si ha ingresado un rut verá las consultas nulas de este, sino verá todas las consultas nulas del sistema"/>
	<mx:LinkButton x="46" y="350" label="Válidas" width="60" fontWeight="normal" enabled="true" id="verActivas" click="{getAllDatos()}" toolTip="Seleccione tipo de vista, si ha ingresado un rut verá todas las consultas activas de este, sino verá todas las consultas activas del sistema"/>
	
	
	
	<!-- AutoComplete para cada parametro -->
	<fc:AutoComplete id="inputNombreMas" x="584" y="8" width="150" dataProvider="{atenciones}" labelField="nombreMascota" visible="false"/>
	<fc:AutoComplete id="inputRaza" x="584" y="8" width="150" dataProvider="{atenciones}" labelField="raza" visible="false"/>
	<fc:AutoComplete id="inputSexo" x="584" y="8" width="150" dataProvider="{atenciones}" labelField="sexo" visible="false"/>
	<fc:AutoComplete id="inputNombreCliente" x="584" y="8" width="150" dataProvider="{atenciones}" labelField="nombreCliente" visible="false"/>
    <fc:AutoComplete id="inputApellidoPaterno" x="584" y="8" width="150" dataProvider="{atenciones}" labelField="apellido" visible="false"/>
	<fc:AutoComplete id="inputRut" x="584" y="8" width="150" dataProvider="{atenciones}" labelField="clienterut" visible="false"/>
	

	<mx:ComboBox x="91" y="8" width="150" id="comboBox" change="seleccionarBusqueda(event)">
		<mx:ArrayCollection>
			<mx:Object label="-Seleccione-"/>
			<mx:Object label="Nombre Mascota"/>
			<mx:Object label="Raza"/> 
			<mx:Object label="Sexo"/> 
			<mx:Object label="Rut"/> 
			<mx:Object label="Nombre Cliente"/> 
			<mx:Object label="Apellido Paterno"/>  
		</mx:ArrayCollection>
	</mx:ComboBox>
	

	
	
	<mx:DataGrid x="30" y="62" width="719" id="Tabla" enabled="true" height="280" dataProvider="{atenciones}" itemDoubleClick="editarAtencion()">
		<mx:toolTip>Muestra las mascotas registradas en el sistema que tienen atenciones de post-operatorio no bloqueadas</mx:toolTip>
		<mx:columns>
			<mx:DataGridColumn headerText="Nombre" dataField="nombreMascota"/>
			<mx:DataGridColumn headerText="Raza" dataField="raza" width="100"/>
			<mx:DataGridColumn headerText="Sexo" dataField="sexo" width="100"/>
			<mx:DataGridColumn headerText="Nombre" dataField="nombreCliente"/>
			<mx:DataGridColumn headerText="Apellido Paterno" dataField="apellido"/>
			<mx:DataGridColumn headerText="Rut" dataField="clienterut"/>
			
			
	     </mx:columns>
	</mx:DataGrid>
	<mx:Button label="Visualizar" id="visualizar" height="23" width="102" x="523" y="350" click="editarAtencion()" cornerRadius="6" toolTip="Visualizar mascota seleccionada"/>
	<mx:Label x="25" y="36" text="Mascota" fontWeight="bold"/>
	<mx:Label x="348" y="36" text="Cliente" fontWeight="bold"/>
	<mx:Label x="176" y="399" width="407" height="17" id="labelMessage" textAlign="center" fontWeight="bold"/>
	<mx:Button x="647" y="350" label="Cancelar" id="cancelar" width="102" height="23" click="cancelando()" cornerRadius="6" toolTip="Regresa al panel anterior"/>
	<mx:Label x="526" y="8" text="Buscar"/>
	<mx:Text x="25" y="10" id="textFiltrar" text="Filtrar por"/>
	


	
</mx:Panel>
