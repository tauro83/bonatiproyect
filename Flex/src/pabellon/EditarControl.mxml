<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" show="getAllDatos()" activate="getAllDatos()" layout="absolute" 
	width="779" height="466" borderColor="#15AD8F" title="Editar Control" x="241" y="133" 
	xmlns:fc="http://www.adobe.com/2006/fc" xmlns:ns1="util.*">
	<mx:states>
		<mx:State name="EditarControl">
			<mx:RemoveChild target="{Tabla}"/>
			<mx:RemoveChild target="{input}"/>
			<mx:RemoveChild target="{comboBox}"/>
			<mx:RemoveChild target="{textFiltrar}"/>
			<mx:RemoveChild target="{textBuscar}"/>
			<mx:AddChild position="lastChild">
				<mx:DateField x="530" y="26" enabled="false" id="fecha" formatString="DD/MM/YYYY"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:TextInput x="530" y="54" width="90" editable="false" id="hora"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:TextInput x="143" y="84" id="responsable" editable="false"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{responsable}" position="before">
				<mx:TextInput x="143" y="26" editable="false" id="cliente"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{responsable}" position="before">
				<mx:TextInput x="143" y="54" editable="false" id="mascota"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:TextArea x="143" y="158" height="128" id="descripcion"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<ns1:Precio x="530" y="159" width="171" id="costo">
				</ns1:Precio>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Label x="413" y="28" text="Fecha: "/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Label x="413" y="56" text="Hora:"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Label x="26" y="86" text="Responsable:"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Label x="26" y="28" text="Cliente:"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Label x="26" y="58" text="Mascota:"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Label x="413" y="159" text="Costo:"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Label x="26" y="159" text="Descripción"/>
			</mx:AddChild>
			<mx:RemoveChild target="{eliminar}"/>
			<mx:AddChild position="lastChild">
				<mx:Button x="530" y="339" label="Guardar" width="99" click="guardar()"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	<mx:Script>
		<![CDATA[
		
			//=======================================================================
			// FECHA: CREACIÓN: 27 Octubre
			// AUTOR: Andres Garrido
			// Comentarios: Muestra todos los controles agendados
			//=======================================================================

			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import transferObjects.Control;
			import mx.rpc.events.ResultEvent;
			import flash.events.MouseEvent;
            import mx.events.FlexEvent;
            import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.core.Application;
			import mx.formatters.DateFormatter;
			import util.Properties;
			import Policlinico.AddControlService;
			import Policlinico.GetAllControles;
			[Bindable]
			private var controles:ArrayCollection;
			[Bindable]
			private var atrib:String="";
			
			/**
			 * Obtiene los datos de las atenciones que están 
			 * registradas en la base de datos
			 * 
			 */
			private function getAllDatos():void{
				this.currentState = "";
				var getAll:GetAllControles = new GetAllControles();
				getAll.addEventListener(ResultEvent.RESULT,getAllDatosResult);
				getAll.getAllControles();
			}	
			/**
			 * Oyente para la funcion getAllDatos()
			 * el resultado del evento lo interpreta como una lista de datos
			 * en donde cada elemento corresponde a un Control de la clinica
			 * luego se guarda cada uno de estos daos
			 */
		    private function getAllDatosResult(event:ResultEvent):void
			{
				controles = new ArrayCollection;
				var lista:ArrayCollection = event.result as ArrayCollection;
				var i:int;
				
				for(i=0;i<lista.length;i++){
					
					var control:Control = lista.getItemAt(i) as Control;
					control.dateToString();
					controles.addItem(control);
				}
				atrib='mascota';
			}
			/**
			 * Es llamada al hacer doble click en el datagrid o al presionar el 
			 * botón Anular, al hacer esto llama a la clase DeleteControl
			 * quien es la encargada de borrar un control de la BD 
			 */
			public function editarAtencion():void{
				this.currentState = "EditarControl";
				if(Tabla.selectedItem!=null){
					var control:Control = controles.getItemAt(Tabla.selectedIndex) as Control;
					
					cliente.text = control.cliente;
					mascota.text = control.mascota;
					responsable.text = control.responsable;
					descripcion.text = control.descripcion;
					fecha.selectedDate = control.fecha;
					hora.text = control.hora;
					
					costo.costo.text = control.costo;
					costo.formatear();
					
					
					
					
					
					
					
					/*var control:Control = controles.getItemAt(Tabla.selectedIndex) as Control;
					var deleteControl:DeleteControl = new DeleteControl();
					deleteControl.addEventListener(ResultEvent.RESULT,deleteControlResult);
					deleteControl.deleteControl(control.hora, control.fecha, control.responsable);*/
				}
				else{
					mens.text=Properties.getMensaje("Advertencia", "14");
				}
				
			}
			/**
			 * Oyente para la funcion eliminarAtencion()
			 * toma el resultado de la ejecucion del borrado en la base de datos
			 * y lo evalua para informar al usuario lo sucedido
			 * si la variable es distinta de cero el resultado fue exitoso
			 * la variable es cero en caso contrario
			 */
			private function deleteControlResult(event:ResultEvent):void{
				var result:int = event.result as int ;
				if(result!=0)
				{
				   mens.text=Properties.getMensaje("Informacion", "42");
				   getAllDatos();
				}
				else
				   mens.text=Properties.getMensaje("Error", "29");
			}
			
			private function guardar():void{
			
			var control:Control = new Control();
					
					control.cliente = cliente.text;
					control.mascota = mascota.text;
					control.responsable = responsable.text;
					control.descripcion = descripcion.text;
					control.fecha = fecha.selectedDate;
					control.hora = hora.text;	
					
					control.costo = costo.costoBruto;
					
					var asd:AddControlService= new AddControlService();			
					asd.updateControl(control);
					asd.addEventListener(ResultEvent.RESULT,updateControlResult);
			
			}
			
			public function updateControlResult(event:ResultEvent):void
			{
				var result:int = event.result as int ;
				if(result!=0)
				{
				   mens.text="Se ha actualizado el control exitosamente";
				   getAllDatos();
				}
				else
				   mens.text="No se ha actualizado el control";
			}
			
			

			
			
			
			
			/**
			 * Al cancelar la operación se muestra un panel que solo tiene el 
			 * mensaje "seleccione una opcion del menú"
			 * 
			 */
			private function cancelando():void
			{
				this.currentState = "";
			
			}
			/**
			 *Cambia el formato de la fecha para una mejor lectura del datagrid
			 */
			
			private function doLabel(item:Object, column:DataGridColumn):String {
				var dateFormatted:DateFormatter = new DateFormatter();
				dateFormatted.formatString = "DD/MM/YYYY";
				var rawDate:Date = new Date(item[column.dataField]);
				return dateFormatted.format(rawDate) as String;
			}
			
			
			/**
			 *  Corrige error de seleccionar el primero
			 * */
		    public function Seleccionar(event:Event):void
			{
			    if(input.selectedIndex==0)
			    {
			    	//input.text=input.selectedLabel;
			    	input.text= "";
			    }
			}
			/**
			 * Determina qué atributo es el que se debe filtrar para
			 * las búsquedas con el auto complete
			 */
			public function setAtrib():void{				
				switch(comboBox.selectedItem.label){
					case 'Nombre Mascota':
						atrib='mascota';
						break;
					case 'Descripción':
						atrib='descripcion';
						break;
					case 'Fecha Control':
						atrib='fechas';
						break;
					case 'Hora':
						atrib='hora';
						break;
					case 'Servicio':
						atrib='servicio';
						break;
					case 'Responsable':
						atrib='responsable';
						break;
				}
			}
			
				public function volver():void{
			
				
			        this.visible = false;
            		Application.application.panelClinicaPrincipal.visible = true;
			    
			}
		]]>
	</mx:Script>
	
	<!--Componentes gráficos-->
	
	
	<mx:ComboBox x="379" y="10" width="169" id="comboBox" click="setAtrib()" change="setAtrib()" >
		<mx:ArrayCollection>
			<mx:Object label="Nombre Mascota"/> 
			<mx:Object label="Descripción"/>
			<mx:Object label="Fecha Control"/> 
			<mx:Object label="Hora"/> 
			<mx:Object label="Servicio"/> 
			<mx:Object label="Responsable"/> 
		</mx:ArrayCollection>
	</mx:ComboBox>
	

	<fc:AutoComplete id="input" dataProvider="{controles}" labelField="{atrib}" close="Seleccionar(event)" x="59" y="10" width="246" />
	
	<mx:DataGrid x="10" y="52" width="739" id="Tabla" enabled="true" height="278" dataProvider="{controles}" doubleClickEnabled="true" itemDoubleClick="editarAtencion()">
		<mx:toolTip>Controles agendados en la veterinaria</mx:toolTip>
		<mx:columns>
			<mx:DataGridColumn headerText="Mascota" dataField="mascota" width="70"/>
			<mx:DataGridColumn headerText="Descripción" dataField="descripcion"/>
			<mx:DataGridColumn headerText="Fecha" dataField="fecha" width="100" labelFunction="doLabel"/>
			<mx:DataGridColumn headerText="Hora" dataField="hora" width="70"/>
			<mx:DataGridColumn headerText="Servicio" dataField="servicio" width="100"/>
			<mx:DataGridColumn headerText="Costo($)" dataField="costo" width="70"/>
			<mx:DataGridColumn headerText="Responsable" dataField="responsable" width="85"/>
			
	     </mx:columns>
	</mx:DataGrid>
	<mx:Button label="Editar" id="eliminar" height="23" width="102" x="537" y="338" click="editarAtencion()" cornerRadius="6" toolTip="Anula el control seleccionado" enabled="true"/>
	<mx:Label x="169" y="372" width="407" height="17" id="mens" fontWeight="bold" textAlign="center"/>
	<mx:Button x="647" y="339" label="Cancelar" id="button1" click="volver()" width="102"/>
	<mx:Text x="10" y="12" text="Buscar" id="textBuscar"/>
	<mx:Text x="313" y="12" id="textFiltrar" text="Filtrar por"/>
	


	
</mx:Panel>