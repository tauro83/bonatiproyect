<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="779" height="466" title="Purgar Cirugía" borderColor="#15ad8f" xmlns:fc="http://www.adobe.com/2006/fc">
	<mx:Script>
		<![CDATA[
		//=======================================================================
		// FECHA CREACIÓN: 14-10-09
		// AUTOR: Esteban Cruz
		// Comentario: Se declara la clase cirugia, una vez instanciada 
		// representa el componente de la capa de interfaz
		//=======================================================================
		
			import mx.controls.List;
			import mx.events.ListEvent; 			
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
            import mx.controls.CheckBox;    
            import mx.events.CloseEvent;
            import mx.rpc.events.ResultEvent;
            import mx.core.Application;
			
			import transferObjects.CirugiaPurg;
			import services.PurgCirugiaService;
			[Bindable]
			private var cirugias:ArrayCollection;
			
			
			
			public function actionVolver():void
			{
            	Application.application.purgCirugia.setVisible(false,false);
            	Application.application.purgCirugiaV.setVisible(true,false);
			
			}
			
			/**
			 * Se obtienen todas las cirugías que están registradas en 
			 * la base de datos para ser mostrados dentro del datagrid
			 */
			public function getAllCirugias():void
		    {
		   		var purgCirugiaService:PurgCirugiaService = new PurgCirugiaService();
		   		purgCirugiaService.addEventListener(ResultEvent.RESULT,getAllCirugiasResult);
				purgCirugiaService.getAllCirugias();
		    }
		   
		    /**
			 * Una vez obtenidas todas las cirugías que están registradas 
			 * en la base de datos, son mostrados dentro del datagrid
			 */
		    public function getAllCirugiasResult(event:ResultEvent):void
		    {
		   		cirugias = event.result as ArrayCollection;
		    }
			
			/**
			 * Se eliminan las cirugías que están seleccionadas en el
			 * grid, desde la base de datos
			 */
			/*public function purgCirugia():void
			{
				var cirugiaPurgService:CirugiaPurgService = new CirugiaPurgService();
				cirugiaPurgService.addEventListener(ResultEvent.RESULT,getAllCirugiasResult);
				cirugiaPurgService.purgCirugia("par");
			}
			
			
			/*private function purgCirugiaResult(event:ResultEvent):void
			{
				var result:int = event.result as int ;
				if(result>0)
				{
				   labelMessage.text = "Cirugía(s) eliminada(s)";
				   //getAllCirugias();
				}
			}*/

            /**
			 * Mensaje para purgar las cirugías que están seleccionadas
			 * en el grid, desde este mismo
			 */
           	private function deleteRow(/*nombreUsuario:String*/):void {
			 Alert.show("¿Está seguro que desea purgar la(s) cirugía(s)? ","Confirme eliminación ", Alert.YES | Alert.NO, this, delRowHandler, null, Alert.NO);
			}
			
			/**
			 * Se eliminan las cirugías que están seleccionadas en el
			 * grid, desde este mismo
			 */
			private function removeTaskRecord():void
            {
                var allRows:int = cirugias.length;
                for (var i:int = 0; i < allRows; i++){
                    if (cirugias[i].sel)
                	{
                        //Alert.show(cirugias[i].nombreMascota);
                        //deleteUsuario(cirugias[i].tipo);
                        //comando para eliminar desde la base de datos debe ir aquí
                         
                        cirugias.removeItemAt(i);
                        allRows = cirugias.length;
                        tablaCirugias.dataProvider = cirugias;
                        i=-1;
                    }   
                }
                barraMsj.text="Cirugía(s) eliminada(s)";              
            }
			
			/**
			 * Una vez seleccionado SÍ o NO en el mensaje
			 * se llama a la función que purga
			 */
			private function delRowHandler(evt:CloseEvent):void {
			    if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
			  removeTaskRecord();
			}
			
			public function setDatos(cirugia:CirugiaPurg):void{
         		cNom.text=cirugia.nombreCliente;
         		cRut.text=cirugia.rutCliente;
         		cTel.text=cirugia.telefono;
         		cDir.text=cirugia.direccion;
         		mNom.text=cirugia.nombreMascota;
         		mRaza.text=cirugia.raza;
         		mSex.text=cirugia.sexo;
         		mFNa.text=cirugia.fechaNacimiento;
         		
         		/*this.cirugia = cirugia;
         		
         		lf = new ListarFichasService();
         		gcliente = new GetCliente();
         		
         		lf.getCliente(mascota.rutCliente);
         		lf.addEventListener(ResultEvent.RESULT,getClienteR);   
         		      		
         		gcliente.getAtenciones(mascota.rutCliente,mascota.nombre);  
         		gcliente.addEventListener(ResultEvent.RESULT,getAtencionesR);
         		
         		this.getMascota();*/
         	}
            
		]]> 
  	</mx:Script>	
  	
  	<!-- Barra estado -->
	<mx:Label x="169" y="390" width="407" height="17" id="barraMsj" textAlign="center" fontWeight="bold"/>
	
	<!-- Tabla con datos -->
	<mx:DataGrid x="10" y="176" width="739" height="166" id="tablaCirugias" dataProvider="{cirugias}" >
		<mx:columns>		
			<mx:DataGridColumn width="120" headerText="Nombre cliente" dataField="nombreCliente" id="nombreCliente" sortable="false" draggable="false"/>
			<mx:DataGridColumn width="120" headerText="Apellido paterno" dataField="apellidoPaterno" id="apellidoPaterno" sortable="false" draggable="false"/>
			<mx:DataGridColumn width="119" headerText="Rut" dataField="rutCliente" id="rutCliente" sortable="false" draggable="false"/>
			<mx:DataGridColumn width="120" headerText="Nombre mascota" dataField="nombreMascota" id="nombreMascota" sortable="false" draggable="false"/>
			<mx:DataGridColumn width="120" headerText="Tipo cirugía" dataField="tipo" id="tipoCirugia" sortable="false" draggable="false"/>
			<mx:DataGridColumn width="120" headerText="Veterinario" dataField="veterinario" id="veterinario" sortable="false" draggable="false"/>
			</mx:columns>
	</mx:DataGrid>
	<mx:Button x="523" y="350" label="Purgar" id="purgarCirugia" click="{deleteRow()}" toolTip="Purga la cirugia seleccionada" width="102" height="23" cornerRadius="6"/>
	<mx:Button x="647" y="350" label="Volver" id="volver" toolTip="Vuelve al panel anterior" width="102" height="23" cornerRadius="6" click="actionVolver()"/>
	<mx:Label x="24" y="36" text="Nombre:" width="78"/>
	<mx:Label x="10" y="9.95" text="Datos cliente" width="97" fontWeight="bold"/>
	<mx:Label x="393" y="9.95" text="Datos mascota" width="98" fontWeight="bold"/>
	<mx:Label x="24" y="62" text="Rut:" width="78"/>
	<mx:Label x="407" y="87.95" text="Sexo:" width="78"/>
	<mx:Label x="407" y="114" text="Fecha nacimiento:" width="107"/>
	<mx:Label x="407" y="36" text="Nombre:" width="63.4" height="17.931034"/>
	<mx:Label x="24" y="88" text="Teléfono:" width="78"/>
	<mx:Label x="24" y="114" text="Dirección:" width="78" height="17.25"/>
	<mx:Label x="407" y="61.9" text="Raza:" width="78"/>
	<mx:TextInput x="127.1" y="34" width="217.75" editable="false" id="cNom"/>
	<mx:TextInput x="127.1" y="60" width="138.75" editable="false" height="20" id="cRut"/>
	<mx:TextInput x="127.1" y="86" width="138.75" editable="false" height="20" id="cTel"/>
	<mx:TextInput x="127.1" y="112" width="217.75" editable="false" height="19.25" id="cDir"/>
	<mx:TextInput x="548.2" y="34" width="138.75" editable="false" height="20" id="mNom"/>
	<mx:TextInput x="548.25" y="59.9" width="92.9" editable="false" height="20" id="mRaza"/>
	<mx:TextInput x="548.25" y="85.95" width="92.9" editable="false" height="20" id="mSex"/>
	<mx:TextInput x="548.2" y="112" width="92.9" editable="false" height="20" id="mFNa"/>
	<mx:Text x="10" y="150" text="Cirugías&#xa;" fontWeight="bold"/>
	
	<!-- Opciones de busqueda -->
</mx:Panel>
