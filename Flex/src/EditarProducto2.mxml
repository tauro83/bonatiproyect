<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="776" height="466" title="Editar Producto" xmlns:ns1="util.*" borderColor="#15AD8F">
<mx:Script>
    <![CDATA[
    
    	//=======================================================================
		// FECHA CREACIÓN: 16/11/09
		// AUTOR: Nicolas Delgado
		// Panel en el cual se pueden editar los datos de un producto registrado
		// en la base de datos, los campos disponibles para editar son:
		// nombre, precio, catalogo, codigo barra y descripción
		//=======================================================================
			
    	import services.editarProducto1;
        import mx.collections.ArrayCollection;
        import transferObjects.Producto;
        import mx.core.Application;
        import mx.rpc.events.ResultEvent;
        import services.configuracionServices;
        import transferObjects.Configuracion;
			
				
    	[Bindable]private var servicios:ArrayCollection;		
			
    	[Bindable]
		private var vacunaciones:ArrayCollection;
	
		/**
		* Se toma el objeto producto con sus respectivos 
		* datos, y se insertan en los campos correspondientes
		* @author Esteban Cruz
		*/
		public function setDatos(vacu:Producto):void
		{
        	nomb.text=vacu.nombre;
        	des.text=vacu.descripcion;
        	precio.costo.text=vacu.precio;
        	cat.text=vacu.categoria;
        	cod.text=vacu.codigo;
     	}
     
     	/**
     	 * Una vez realizados los cambios en los campos correspondientes 
     	 * se llama a la funcion que los guardara en la base de datos
     	 * @author Esteban Cruz 
     	 */
		private function guardarProducto():void{
				
				/**
				 * Se toman los datos ingresados
				 */ 
				var p:Producto = new Producto;
				
				p.descripcion= des.text;
				p.categoria=cat.text;
				p.precio=precio.costo.text;;
				p.nombre=nomb.text;
				p.codigo=cod.text;
				
				/**
				 * Se llama a la función
				 */ 
				var editHoteleriaService:editarProducto1 = new editarProducto1();
				editHoteleriaService.addEventListener(ResultEvent.RESULT,editProductoResult);
				editHoteleriaService.modificarProducto(p.descripcion,p.categoria,p.precio,p.nombre,p.codigo);
				
							
		}
		/** 
			 *  Obtiene las categorias desde el actionScript
		 	 * 	@author  "Erwin Díaz"
			 * */
			public function cargarDatos():void
			{
				var confs:configuracionServices= new configuracionServices();
				confs.getConfiguraciones("CatProd");
				confs.addEventListener(ResultEvent.RESULT,cargarDatosR);
			}
			
			/** 
			 *  Asigna el retorno del llamado de cargarDatos a un
			 *   arrayCollection para mostrar las configuraciones
		 	 * 	@author  "Camilo Verdugo"
			 * */
			public function cargarDatosR(event:ResultEvent):void
			{
				servicios = event.result as ArrayCollection;
				servicios.addItemAt("--Seleccione--",0);
				cat.selectedIndex = 0;	
			}
		/**
		 * Una vez modificado los dato y que se ha llama a la función que modifica 
		 * los datos directamente en la base de datos, se muestra el mensaje
		 * de resultado al usuario
		 * @return 1 en el caso que haya sido correcta la modificación y
		 * 		   0 en caso contrario
		 * @author Esteban Cruz 
		 */ 
		private function editProductoResult(event:ResultEvent):void{
			var result:int;
		 	result = event.result as int;
			   
			/**	
			 * En caso de ser correcto
			 */ 
	     	if(result > 0 ){
				Application.application.editProducto.mens.text = "Registro Modificado correctamente";
				Application.application.editProducto2.setVisible(false,false);
            	Application.application.editProducto.setVisible(true,false);
            	Application.application.editProducto.getAllVacunaciones();
			}
			/**
			 * En caso de ser incorrecto
			 */ 
			else{
			   mens.text = "Registro no modificado";
			      //labelMessage.text = Properties.getMensaje("Error", "15");
			   } 	
			}
		/**
		* Evento del boton "Volver", el cual redirige a la página
		* anterior
		*/
		public function Actionvolver():void
		{
        	Application.application.editProducto2.setVisible(false,false);
        	Application.application.editProducto.setVisible(true,false);
        	Application.application.editProducto.limpiarTodo();
        	Application.application.editProducto.getAllVacunaciones();       	
        	
		}
	
	
	]]>
</mx:Script>
    
    
    
	<mx:TextInput x="122" y="67" width="163" restrict="A-Z a-z ñ Ñ Á É Í Ó Ú á é í ó ú" includeInLayout="true" id="nomb"  enabled="true" maxChars="20"/>
	<mx:Label x="27" y="69" text="Nombre:" width="69" />
	<mx:Button xmlns:mx="http://www.adobe.com/2006/mxml" width="102" height="25" x="632" label="Cancelar" y="353" id="volver" click="Actionvolver()" />
	<mx:Button xmlns:mx="http://www.adobe.com/2006/mxml" width="102" height="25" x="522" label="Editar" y="353" click="guardarProducto(),Application.application.editProducto.getAllVacunaciones()"/>
	<mx:Label x="176" y="399" width="407" height="17" id="mens" fontWeight="bold" textAlign="center"/>
	<mx:Label x="29" y="114" text="Precio:"/>
	<mx:Label x="25" y="203" text="Descripción:"/>
	<mx:TextArea x="123" y="202" id="des" maxChars="160" width="611" height="131"/>
	<mx:Label x="29" y="159" text="Categoría:" width="69" />
	<mx:Label x="27" y="30" text="Codigo barra:" width="88" />
	<mx:TextInput x="123" y="28" id="cod" editable="false" enabled="true"/>
	<mx:ComboBox x="125" y="157" id="cat" dataProvider="{servicios}"  labelField="nombre" width="158"/>

	<ns1:Precio x="122" y="108" width="161" id="precio">
	</ns1:Precio>
	
</mx:Panel>
