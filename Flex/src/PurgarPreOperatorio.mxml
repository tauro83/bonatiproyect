<!--@Author Erwin Díaz-->
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml"  layout="absolute"  width="779" height="466" title="Purgar Pre-Operatorio" borderColor="#15AD8F" >
	<mx:Script>
		<![CDATA[
		//=======================================================================
		// FECHA CREACIÓN: 16-11-09
		// AUTOR: Nicolas Delgado
		// Comentario: Una vez seleccionado un cliente, se visualiza su información 
		// detalla junto a sus vacunaciones para poder anular la deseada
		//=======================================================================
				
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
            import mx.controls.CheckBox;    
            import mx.events.CloseEvent;
            import mx.rpc.events.ResultEvent;
            import mx.core.Application;
			
			import services.anularPreoperatorio;
			import transferObjects.anuPreoperatorio;

			/**
			* Esta variable se encarga de obtener desde la base datos los datos asociado 
			* a un registro de peluqueria de todas las mascota que alguna vez se han 
			* realizado una atención.
			*
			*/ 
			[Bindable]
			private var vacunaciones:ArrayCollection;
			
			
			/**
			* Evento del boton "Volver", el cual redirige  a la página
			* anterior (en donde se muestra un listado de todo los clientes y mascotas
			* que poseen un registro en la peluquería).
			*/
			public function actionVolver():void
			{
            	Application.application.anularPre2.setVisible(false,false);
            	Application.application.anularPre.setVisible(true,false);
            	Application.application.anularPre.limpiarTodo();
			}
			
           /**
			* Se obtienen todos los registro de peluquería que se encuentran registrados en 
			* la base de datos, que serán mostrados por el datagrid en el panel, en este
			* panel seran mostrados solamente el costo, descripción, servicio, hora, fecha,
			* responsable y nombre del catalogo.
			*/
			public function getAllVacunacionesU(nombreMascota:String):void
		    {
		   		var vacunacionService:anularPreoperatorio = new anularPreoperatorio();
		   		vacunacionService.addEventListener(ResultEvent.RESULT,getAllVacunacionesResult);
				vacunacionService.getAllVacunacionesU(nombreMascota);
		    }
		   
           /**
			* Se obtienen todos los registro de peluquería que se encuentran registrados en 
			* la base de datos, que serán mostrados por el datagrid en el panel, en este
			* panel seran mostrados solamente el costo, descripción, servicio, hora, fecha,
			* responsable y nombre del catalogo.
			*/
		    public function getAllVacunacionesResult(event:ResultEvent):void
		    {
		   		vacunaciones = event.result as ArrayCollection;
		    }
			
			/**
			* Este metodo se  encarga de realizar la anulación de un registro de peluquería
			* pasando como parametro el estado que posee el objeto que se desea anular.
			*/
			public function anular(estado:int,nombreMascota:String,hora:String):void
			{
				var vacunacionService:anularPreoperatorio = new anularPreoperatorio();
				vacunacionService.anular(estado,nombreMascota,hora);
			}

            /**
			* Este metodo se encarga de mostrar un pop-up que señala la acción 
			* anular un registro de peluquería que están seleccionadas
			* en el grid, pero el usuario debera ingresar el motivo por el cual se 
			* esta realizando la anulación.
			*/
           	private function deleteRow():void 
           	{
         		if(motivo.text==""){
         			Alert.show("Debe ingresar un motivo para anular el(los) registro(s) de preoperatorio","Campo incompleto");
         		}
         		else{
					Alert.show("¿Está seguro que desea anular el(los) registro(s) de preoperatorio? ","Confirme anulación ", Alert.YES | Alert.NO, this, delRowHandler, null, Alert.NO);
         		}
			}
			
			/**
			* Este metodo se encarga de anular todo los registro de peluquería seleccionado
			* por el usuario, los cuales pueden ser uno o mas, para la eliminación de un 
			* registro de peluquería se debera enviar la hora que definira como identificador
			* unico.
			*/
			private function removeTaskRecord():void
            {
                var allRows:int = vacunaciones.length;
                var vacu:anuPreoperatorio= new anuPreoperatorio();
                
                for (var i:int = 0; i < allRows; i++){
                    if (vacunaciones[i].sel)
                	{
                        vacu = vacunaciones[i] as anuPreoperatorio;
                        anular(vacu.estado,vacu.nombreMascota,vacu.hora);
                       
                        vacunaciones.removeItemAt(i);
                        allRows = vacunaciones.length;
                        tablaVacunaciones.dataProvider = vacunaciones;
                        i=-1;
                    }   
                }
                motivo.text="";
                barraMsj.text="Registro(s) de Preoperatorio anulado";              
            }
			
			/**
			* Una vez seleccionado SÍ o NO en el mensaje
			* se llama a la función que anula por si el usuario esta seguro
			* si desea anular el registro de la peluquería. 
			*/
			private function delRowHandler(evt:CloseEvent):void {
			    if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
			  removeTaskRecord();
			}
			
			/**
			* Se toma el objeto cliente con sus respectivos 
			* datos, y se insertan en los campos correspondientes tanto del 
			* Cliente y Mascota.
			*/
			public function setDatos(vacu:anuPreoperatorio):void
			{
				getAllVacunacionesU(vacu.nombreMascota);
         		cNom.text=vacu.nombreCliente;
         		cRut.text=vacu.rutCliente;
         		cApP.text=vacu.apellido;
         		mNom.text=vacu.nombreMascota;
         		mRaz.text=vacu.raza;
         		mSex.text=vacu.sexo;
         	}
         	
			/**
			* Este metodo se encarga de anular todo los registro de peluquería seleccionado
			* por el usuario, los cuales pueden ser uno o mas, para la eliminación de un 
			* registro de peluquería se debera enviar la hora que definira como identificador
			* unico.
			*/
         	private function selectAll():void{
                var allRows:int = vacunaciones.length;
                for (var i:int = 0; i < allRows; i++){
                    if (todo.selected)
                        vacunaciones[i].sel = true;
                    else
                        vacunaciones[i].sel = false;
                }
                tablaVacunaciones.dataProvider = vacunaciones;
            }

            /**
            * Este metodo se encarga de deseleccionar el checkBox que selecciona a todos los 
            * registro de peluquería.
            */
            public function limpiarTodo():void{
            	todo.selected=false;
            }
           	
		]]>
	</mx:Script>
<!-- Tabla con datos -->
	<mx:DataGrid x="25" y="178" width="709" height="134" id="tablaVacunaciones" dataProvider="{vacunaciones}" toolTip="Seleccion la(s) vacunacion(es) que desea anular">
		<mx:columns>
			<mx:DataGridColumn width="20" headerText="" dataField="checkbox" id="checkbox" draggable="false">
			 	<mx:itemRenderer>
                        <mx:Component>
                            <mx:CheckBox click="data.sel=!data.sel"  selected="{data.sel}"/>            
                        </mx:Component>
             	</mx:itemRenderer>
            </mx:DataGridColumn>		
			<mx:DataGridColumn width="60" headerText="Responsable" dataField="responsable" id="responsable" draggable="false"/>
			<mx:DataGridColumn width="70" headerText="Ayudante" dataField="ayudante" id="ayudante" draggable="false"/>
			<mx:DataGridColumn width="250" headerText="Sintomas" dataField="sintomas" id="sintomas" draggable="false"/>
			<mx:DataGridColumn width="90" headerText="Hora" dataField="hora" id="hora" draggable="false"/>
			<mx:DataGridColumn width="90" headerText="Fecha" dataField="fecha" id="fecha" draggable="false"/>
			<mx:DataGridColumn width="130" headerText="Observaciones" dataField="observaciones" id="observaciones" draggable="false"/>		
		</mx:columns>
	</mx:DataGrid>
	<mx:CheckBox x="25" y="152" id="todo" click="{selectAll()}" toolTip="Selecciona o deselecciona todo"/>
	<mx:Label x="47" y="152" text="Seleccionar todo"/>
	
	<!-- Elementos -->
	<mx:Button x="632" y="353" label="Volver" id="volver" toolTip="Vuelve al panel anterior" width="102" height="23" cornerRadius="6" click="actionVolver()"/>
	<mx:Label x="25" y="35" text="Nombre:" width="78"/>
	<mx:Label x="25" y="10" text="Cliente" width="97" fontWeight="bold"/>
	<mx:Label x="405" y="10" text="Mascota" width="98" fontWeight="bold"/>
	<mx:Label x="25" y="87.95" text="Rut:" width="78"/>
	<mx:Label x="405" y="87.95" text="Sexo:" width="78"/>
	<mx:Label x="405" y="36" text="Nombre:" width="63.4" height="17.931034"/>
	<mx:Label x="25" y="62" text="Apellido Paterno:" width="103"/>
	<mx:Label x="405" y="61.9" text="Raza:" width="78"/>
	<mx:Text x="25" y="124" text="Peluquería&#xa;" fontWeight="bold" height="20"/>
	<mx:Text x="136" y="62" id="cApP" width="150"/>
	<mx:Text x="136" y="35" id="cNom" width="150"/>
	<mx:Text x="136" y="87.95" id="cRut" width="150"/>
	<mx:Text x="478.4" y="36" id="mNom" width="150"/>
	<mx:Text x="478.4" y="61.9" id="mRaz" width="150"/>
	<mx:Text x="478.4" y="87.95" id="mSex" width="150"/>
	<mx:Button x="522" y="354" label="Anular" click="{deleteRow()}" cornerRadius="6" width="102" toolTip="Anula la(s) vacunacion(es) seleccionada(s)"/>
	<mx:TextInput x="76" y="320" width="658" id="motivo" toolTip="Ingrese el motivo por el cual desea anular la(s) vacunacion(es)"/>
	<mx:Text x="25" y="322" text="Motivo" fontWeight="bold"/>
	<mx:Label width="407" height="17" id="barraMsj" textAlign="center" fontWeight="bold" x="176" y="399"/>
	
</mx:Panel>
