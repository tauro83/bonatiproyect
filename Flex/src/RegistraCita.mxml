<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" initialize="cargarClientes()" layout="absolute" width="779" height="466" borderColor="#15AD8F" xmlns:ns1="com.adobe.flex.extras.controls.*" title="Registro cita" x="191" y="90">
	
	<mx:Script>
        <![CDATA[
    
    	//=======================================================================
			// FECHA: CREACIÓN: 03 Octubre
			// AUTOR: Victor Silva
			// Comentarios: Formulario y validacion del registro de una cita en el sistema
			//=======================================================================
    
    
            import mx.events.FlexMouseEvent;
			import mx.controls.Text;
			import mx.rpc.events.ResultEvent;
            public var selectedItem:Object;
            import mx.core.Application;
            import mx.controls.Alert;
            import mx.collections.ArrayCollection;
            import services.citaServices;
			import transferObjects.Cita;
			import transferObjects.Cliente; 
			
			private var ct:citaServices = new citaServices();
			private var c1:Cita;
			
			[Bindable]
			private var clientes:ArrayCollection;
			private var mascotas:ArrayCollection;
		
            
            
             //Datos para Editar las ociones sin tener que volver a agenda

           [Bindable]
            public var servicios:ArrayCollection = new ArrayCollection(
                [  {label:"Pabellón"}, 
                  {label:"Peluquería"},
                  {label:"Policlínico"},
                  {label:"Atención a domicilio"} ]);
          
          [Bindable]
            public var usuarios:ArrayCollection = new ArrayCollection(
                [ {label:"Claudio Bonati"}, 
                  {label:"Patricio Castro"} ]);
          
            
            [Bindable]
            public var horas:ArrayCollection = new ArrayCollection(
                [{hora:"10:30"}, {hora:"11:00"}, {hora:"11:30"}, {hora:"12:00"}, {hora:"12:30"}, 
                 {hora:"15:30"}, {hora:"16:00"}, {hora:"16:30"}, {hora:"17:00"}, {hora:"17:30"}, 
                 {hora:"18:00"}, {hora:"18:30"}, {hora:"19:00"}, {hora:"19:30"}]);
                 
            	/**
	 * 	@Fecha  03 Octubre
	 *  @Descripcion Metodo que consulta todos los registros de clientes en la base de datos
	 
	 	**/ 
			public function cargarClientes():void
			{
			    var citaservices: citaServices = new citaServices();
				citaservices.addEventListener(ResultEvent.RESULT,getClientesResult);
				citaservices.getClientesActivos();
			}
            
            
            	/**
	 * @Fecha  03 Octubre
	 *  @Descripcion Metodo que recibe un ArrayCollection con las clientes activos del sistema
	 *  consulta todos los registros de clientes en la base de datos.
	 
	 	**/	
			
			private function getClientesResult(event:ResultEvent):void
			{
				var i:int=0;
				clientes = event.result as ArrayCollection;
				for(i=0; i<clientes.length; i++){
					clientes.getItemAt(i).nombre= clientes.getItemAt(i).nombre.split(" ",1).pop() + " " + clientes.getItemAt(i).apellido.split(" ",1).pop() + " " + clientes.getItemAt(i).apellido2;
					
					/* clientes.get(i).nombre= clientes.get(i).nombre.split(" ",1).pop() + " " + clientes.get(i).apellido.split(" ",1).pop() + " " + clientes.get(i).apellido2.split(" ",1).pop();  */ 
				}
				
				
				autoClientes.dataProvider=clientes;
				autoClientes.labelField= "rut";
			}
			
              private function AsignarNombre():void
            {
            		if(autoClientes.selectedItem != false){
            			autoClienteN.text = autoClientes.selectedItem.nombre.split(" ",1).pop() + " " + autoClientes.selectedItem.apellido.split(" ",1).pop() + " " + autoClientes.selectedItem.apellido2;
            			cargarMascotas();
            			} 
            	
            }
            
            
            private function asignarRut():void
            {
            	if(autoClienteN.selectedItem != false){
            			autoClientes.text = autoClienteN.selectedItem.rut;
            		    cargarMascotas();
            			} 
            }
             
            
            
            /**
		 	 * 	@author  "Victor SIlva"
			 * 	@Fecha  03 Octubre
			 *  @Descripcion Metodo que crea una instancia del transferObject cita,
			 *  posterior a la validacion de datos  y lo envia a citaServices		 		
			 * */
			private function registrarCita():void
			{								 
	
					
					c1					= new Cita();
					c1.cliente 			= autoClientes.text
					c1.mascota      	= listMascotas.selectedLabel;
					c1.fecha        	= fecha.text;
					c1.hora				= hora.text
					c1.servicio			= servicio.text;
					c1.usuario			= usuario.text;
					
					ct.addCita(c1);				
					ct.addEventListener(ResultEvent.RESULT,registroCitaResultado);	
																									
				}			
			
			/**
		 	 * 	@author  "Victor Silva"
			 * 	@Fecha  03 Octubre
			 *  @Descripcion retorna el resultado de la accion que se realizo:Registro.		
			 * */
			private function registroCitaResultado(event:ResultEvent):void
			{
				var message:String= event.result as String;	
				var msj:String = "";
				if(message=="1"){
					Application.application.agenda2.labelMessage.text = "Cita para " +listMascotas.selectedLabel.split(" ",1) + " fue Registrada"; 	
					Application.application.registrarCita.setVisible(false);
					Application.application.agenda2.setVisible(true);	
					listMascotas.text = '';
					Application.application.agenda2.iniciarAgenda();			
    		 	}
				else{
					msj = "Cita ya esta registrada con la hora, dia y encargado, cambie los parametros"; 				
				}		
				mens.text = msj;	
			}		
            
			
			public function cancelarRegistroCita(event:Event = null):void
			{
				
			    //Alert.show(selectedRow.hora);
			    Application.application.agenda2.setVisible(true);
			    Application.application.registrarCita.setVisible(false);
			    Application.application.agenda2.labelMessage.text="Usted ha cancelado la operación";
			    
			}
            
             public function Seleccionar(event:Event = null):void
			{
			    if(Application.application.registrarCita.autoClientes.selectedIndex == "0")
			    {
			   Application.application.registrarCita.autoClientes.text=autoClientes.selectedLabel;
			    }
			    
			}
			
			
			
		    public function Seleccionar2(event:Event = null):void
			{
			    if(Application.application.registrarCita.autoClienteN.selectedIndex == "0")
			    {
			    Application.application.registrarCita.autoClienteN.text=autoClienteN.selectedLabel;
			    }
			    
			} 
			
			public function cargarMascotas():void
			{
			 var citaservices: citaServices = new citaServices();
				citaservices.addEventListener(ResultEvent.RESULT,getMascotasResult);
				citaservices.getMascotas(Application.application.registrarCita.autoClientes.text);
				
				
			}
			
			private function getMascotasResult(event:ResultEvent):void
			{
				var i:int;
				mascotas = event.result as ArrayCollection;
				listMascotas.dataProvider = mascotas;
				for(i<0; i<mascotas.length; i++){
					mascotas.getItemAt(i).nombre= mascotas.getItemAt(i).nombre.split(" ",1);
					
				}
				listMascotas.labelField = 'nombre';
			}
			
		
       ]]>
       
    </mx:Script>
	
	<mx:Label x="10" y="20" text="Rut Cliente:" width="145"/>
	<mx:Label x="10" y="100" text="Nombre Mascota:" width="145"/>
	<mx:Label x="10" y="146" text="Fecha         :" width="145"/>
	<mx:Label x="10" y="196" text="Hora          :" width="145"/>
	<mx:DateField id="fecha" x="163" y="144" width="115" formatString="DD/MM/YYYY" editable="false"/>
	<mx:ComboBox id="hora" x="163" y="194"   width="160" editable="false">
	
	</mx:ComboBox>
	<mx:Label  x="10" y="243" text="Servicio         :" width="145"/>
	<mx:ComboBox x="163" y="241" id="servicio" width="160" editable="false"></mx:ComboBox>
	
	
	<mx:Button x="601" y="312" label="Cancelar" width="112" click="{cancelarRegistroCita()}"/>
	<mx:Button x="470" y="312" label="Guardar " width="123" click="registrarCita()"/>
	<mx:Label id="encargado" x="10" y="303" text="Responsable :" width="145"/>
	<mx:ComboBox x="163" y="301" id="usuarioNombre" width="160" labelField="nombre" activate="false"></mx:ComboBox>
	<mx:Label x="169" y="372" width="407" height="17" id="mens" fontWeight="bold" textAlign="center"/>
	
	<ns1:AutoComplete x="163" y="18"   id="autoClientes" dataProvider="{clientes}" labelField="rut" close="AsignarNombre(), Seleccionar()"/>
	<mx:Label x="10" y="61" text="Nombre Cliente:" width="145"/>
	<ns1:AutoComplete x="163" y="59" id="autoClienteN" dataProvider="{clientes}" labelField="nombre" close="asignarRut(),Seleccionar2()" />
	<mx:ComboBox x="163" y="98" id="listMascotas" labelField="nombre" resize="false" >
	</mx:ComboBox>
	<mx:TextInput id="usuario" x="163" y="331" visible="false"/>

</mx:Panel>
