<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="779" height="466" borderColor="#15AD8F" xmlns:fc="http://www.adobe.com/2006/fc"  title="Editar Cliente">
	
		<mx:Script>
		<![CDATA[
		
			//=======================================================================
			// FECHA CREACIÓN: 06/10/09
			// AUTOR: Raúl López
			// Panel de busqueda del sistema, dentro de esta se pueden realizar 
			// busqueda para: Cliente, 
			//=======================================================================
			
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import services.BusquedaService;
			import administracion.ClienteEditService;
			import mx.events.CloseEvent;
			import mx.events.DropdownEvent;
			import mx.core.Application;
			import mx.controls.dataGridClasses.DataGridColumn;
			import flash.events.MouseEvent;
            import mx.events.FlexEvent;
            import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			
			import transferObjects.Cliente;

			[Bindable]
			private var clientes:ArrayCollection;
			
			[Bindable]
			private var nuevaRut2:String;
			
			[Bindable]
			public var newCli:Cliente;
			private var clienteAux:Cliente;
			private var clienteAuxEditado:Cliente;
			public var newCli2:EditClienteUpdate;


		
		     /**
			 *  Hace visible los elementos correspondientes al objeto
			 *  que se selecciono desde el 1er combobox
			 *  @author  "Esteban Cruz"
			 **/
			private function seleccionarBusqueda (event:Event):void
            {   
            	
				inputClienteEmail.setVisible(false,false);
				inputClienteNombre.setVisible(false,false);
				inputClienteTel.setVisible(false,false);
				inputClienteRut.setVisible(false,false);
				inputClienteApellido2.setVisible(false,false);
				inputClienteApellido.setVisible(false,false);
				textBuscar.setVisible(true, false);
				getAllClientesE();
				
			  switch (combobox.selectedLabel)
			  {
				case 'E-mail':		
					inputClienteEmail.setVisible(true,false);
					inputClienteEmail.selectedItem=false;
				break; 
				case 'Nombre':		
					inputClienteNombre.setVisible(true,false);
					inputClienteNombre.selectedItem=false;
				break; 
				case 'Teléfono':		
					inputClienteTel.setVisible(true,false);
					inputClienteTel.selectedItem=false;
				break; 
				case 'Rut':		
					inputClienteRut.setVisible(true,false);
					inputClienteRut.selectedItem=false;
				break; 	
				case 'Apellido materno':		
					inputClienteApellido2.setVisible(true,false);
					inputClienteApellido2.selectedItem=false;
				break; 	
				case 'Apellido paterno':		
					inputClienteApellido.setVisible(true,false);
					inputClienteApellido.setVisible(true,false);
				break; 	
				
			  }
            }
			
			
			/**
			 *  Hace invisible a todos los elementos del componente
			 *  @author  "Esteban Cruz"
			 **/
			private function limpiarTodo():void
            {
            	
            	combobox.selectedIndex=0;
            	gridCliente.dataProvider=null;
            	inputClienteEmail.dataProvider=null;
            	inputClienteNombre.dataProvider=null;
            	inputClienteTel.dataProvider=null;
            	inputClienteRut.dataProvider=null;
            	inputClienteApellido.dataProvider=null;
            	inputClienteApellido2.dataProvider=null;
            	
            	inputClienteEmail.setVisible(false,false);
            	inputClienteNombre.setVisible(false,false);
            	inputClienteTel.setVisible(false,false);
            	inputClienteRut.setVisible(false,false);
            	inputClienteApellido.setVisible(false,false);
            	inputClienteApellido2.setVisible(false,false);
            	combobox.selectedItem="-Seleccionar-";
            	textBuscar.setVisible(false,false);
            	this.clientes = new ArrayCollection();
            	clientes = null;
            	
            }
			
			/**
			 * @author  "Raul Lopez"
			 * @Fecha  20 Septiembre
			 * @Funcion que recibe de la base datos todos los clientes existentes, esto se recibe y se realiza una b?squeda del rut del cliente
			 * para de este obtener sus datos.
		    */
			public function getAllClientesE():void
			{
				var personService:ClienteEditService = new ClienteEditService();
				personService.addEventListener(ResultEvent.RESULT,getAllClienteEResult);
				personService.getAllClientesE();
				
			}
			/**
			 * @author  "Raul Lopez"
			 * @Fecha  20 Septiembre
			 * @Funcion que copia el conjunto de clientes recibidos en un arrayColecction llamado clientes
			 */
			private function getAllClienteEResult(event:ResultEvent):void
			{
				clientes = event.result as ArrayCollection;
				
			}
			
			public function rute(event:Event):void{
			
			   if(gridCliente.selectedItem){   	 	
            	  Application.application.ediCliUp.carga(gridCliente.selectedItem as Cliente);
            	  this.setVisible(false,false);
            	  Application.application.ediCliUp.setVisible(true,false);
			   
			   }
			}
			
			private function volver():void
            {
            	this.limpiarTodo();
            	this.setVisible(false,false);
            	Application.application.panel2.setVisible(true,false);
            }
            
            
            
		public function Seleccionar(event:Event):void{
            if(inputClienteNombre.selectedIndex==0);
				inputClienteNombre.text=inputClienteNombre.selectedLabel;
			
			if(inputClienteRut.selectedIndex==0);
				inputClienteRut.text=inputClienteRut.selectedLabel;
			
			if(inputClienteTel.selectedIndex==0);
			    inputClienteTel.text=inputClienteTel.selectedLabel;
			
			if(inputClienteEmail.selectedIndex==0);
				inputClienteEmail.text=inputClienteEmail.selectedLabel;
			
			if(inputClienteApellido.selectedIndex==0);
				inputClienteApellido.text=inputClienteApellido.selectedLabel;
				
			
			if(inputClienteApellido2.selectedIndex==0);
				inputClienteApellido2.text=inputClienteApellido2.selectedLabel;
			
		}
		
		
		]]>
	</mx:Script>
	
	<mx:Button x="632" y="353" label="Volver" width="102" cornerRadius="6" id="idCancelar" click="{volver()}" height="23"/>
	
	<mx:Text x="30" y="26" id="textFiltrar" text="Filtrar por"/>
	<mx:Text x="523" y="26" text="Buscar" id="textBuscar" visible="true"/>

	<!-- AutoComplete para cada parametro -->
	
	<!-- input Cliente -->
	<fc:AutoComplete id="inputClienteNombre" close="Seleccionar(event)"  x="572" y="24" width="150" dataProvider="{clientes}" labelField="nombre" visible="false"/>
	<fc:AutoComplete id="inputClienteRut" close="Seleccionar(event)"  x="572" y="24" width="150" dataProvider="{clientes}" labelField="rut" visible="false"/>
	<fc:AutoComplete id="inputClienteTel" close="Seleccionar(event)"  x="572" y="24" width="150" dataProvider="{clientes}" labelField="telefono2" visible="false"/>
	<fc:AutoComplete id="inputClienteEmail" close="Seleccionar(event)"  x="572" y="24" width="150" dataProvider="{clientes}" labelField="email" visible="false"/>
	<fc:AutoComplete id="inputClienteApellido" close="Seleccionar(event)" x="572" y="24" width="150" dataProvider="{clientes}" labelField="apellido" visible="false"/>
	<fc:AutoComplete id="inputClienteApellido2" close="Seleccionar(event)"  x="572" y="24" width="150" dataProvider="{clientes}" labelField="apellido2" visible="false"/>
	
	<!-- Cliente: combobox y grid -->
	<mx:ComboBox x="96" y="24" id="combobox" width="150" change="seleccionarBusqueda(event)">
		<mx:ArrayCollection>
			<mx:Object label="-Seleccionar-"/>
			<mx:Object label="Apellido materno"/>
			<mx:Object label="Apellido paterno"/>
			<mx:Object label="E-mail"/>
			<mx:Object label="Nombre"/>
			<mx:Object label="Rut"/>
		</mx:ArrayCollection>
	</mx:ComboBox>
	
	<mx:DataGrid x="30" y="52" width="692" height="283" id="gridCliente" visible="true" dataProvider="{clientes}" doubleClickEnabled="true" itemDoubleClick="{rute(event)}">
		<mx:columns>
			<mx:DataGridColumn headerText="Nombre" dataField="nombre" />
			<mx:DataGridColumn headerText="Apellido paterno" dataField="apellido"/>
			<mx:DataGridColumn headerText="Apellido materno" dataField="apellido2"/>
			<mx:DataGridColumn headerText="Rut" dataField="rut" id="rut"/>
			<mx:DataGridColumn headerText="Codigo" dataField="rut2" visible="false"/>
			<mx:DataGridColumn headerText="E-mail" dataField="email" id="email"/>
			<mx:DataGridColumn headerText="E-mail2" dataField="email2" visible="false" />
			<mx:DataGridColumn headerText="Teléfono" dataField="telefono" visible="false"/>
			<mx:DataGridColumn headerText="Teléfono2" dataField="telefono2" visible="false"/>
			<mx:DataGridColumn headerText="Celular" dataField="celular" visible="false" />
			<mx:DataGridColumn headerText="Celular2" dataField="celular2" visible="false"/>
			<mx:DataGridColumn headerText="Direccion" dataField="direccion" visible="false" />
			<mx:DataGridColumn headerText="Region" dataField="region" visible="false"/>
			<mx:DataGridColumn headerText="Comuna" dataField="comuna" visible="false"/>
			<mx:DataGridColumn headerText="Estado" dataField="estado" visible="false"/>
			
		</mx:columns>
	</mx:DataGrid>
	<mx:Label x="176" y="399" width="407" height="17" id="labelMessage" textAlign="center" fontWeight="bold"/>
	<mx:Button x="522" y="353" label="Visualizar" click="{rute(event)}" toolTip="Visualiza el cliente seleccionado" width="102" height="23" cornerRadius="6"/>
	
</mx:Panel>
