<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="779" height="466" title="Registrar Cliente" borderColor="#15AD8F">
	<mx:Script>
		<![CDATA[		
//=======================================================================
// FECHA CREACIÓN: 20/09/09 
// AUTOR: Nicolas Delgado
// Comentario: Este componente van incorporado cada uno de los elementos 
// Que deberan contener el registro de un cliente para que sea parte de la 
// Clinica Veterinaria.
// 
//=======================================================================
		import mx.controls.Text;
		import mx.controls.Alert;
		import mx.rpc.events.ResultEvent;			
		import services.ClienteService;
		import services.validarRut;
        import mx.events.ValidationResultEvent; 
        import transferObjects.Cliente;
        import mx.events.CloseEvent;
		import mx.events.DropdownEvent;
		import services.Validacion;
		import mx.core.Application;
		import services.Validaremail;
		
        
        private var w:ClienteService= new ClienteService();
        private var v:Validacion=new Validacion();
        private var e:Validaremail=new Validaremail;
		public	var cl:Cliente;
		private var vNombre:Boolean;
        private var vApellido:Boolean;
        private var vApellido2:Boolean;
        private var vCelular:Boolean;
        private var vCelular2:Boolean;
        private var vTelefono:Boolean;
        private var vTelefono2:Boolean;
        private var vEmail:Boolean;
        private var vEmail2:Boolean;
        
        [Bindable]
        private var c:String;
        private var rw:validarRut=new validarRut();
        private var valor:int=0;
		/** 
		* Este metodo se encarga de hacer invisible cada una de las comuna asociada a una region
		* pero en el momento que el usuario seleccione una region seran desplegada las comunas
		* corresponsiente a la region seleccionada haciendo las visible.  
		* 
		* @author  "Nicolas Delgado"
		*
		*/		
        
         private function regiones(event:Event):void
           {           		
           		region.setVisible(true,false);
           		comunas.setVisible(false,false);
           		comunaAntofagasta.setVisible(false,false);
           		comunaAtacama.setVisible(false,false);
           		comunaCoquimbo.setVisible(false,false);
           		comunaValparaiso.setVisible(false,false);
            	comunaLibertador.setVisible(false,false)
            	comunaMaule.setVisible(false,false);
            	comunaBio.setVisible(false,false);
            	comunaAraucania.setVisible(false,false);
            	comunaLagos.setVisible(false,false);
            	comunaMagallanes.setVisible(false,false);
            	comunaAysen.setVisible(false,false);
            	comunaMetro.setVisible(false,false);
            	comunaRio.setVisible(false,false);
            	comunaArica.setVisible(false,false);
            	
            	switch (region.selectedLabel)
				{
				case 'Region De Tarapaca':		
					comunas.setVisible(true,false);
				break; 
				case 'Region De Antofagasta':
					comunaAntofagasta.setVisible(true,false);
				break;
				case 'Region De Atacama':
					comunaAtacama.setVisible(true,false);
				break;
				case 'Region De Coquimbo':
					comunaCoquimbo.setVisible(true,false);
				break;
				case 'Region De Valparaiso':
					comunaValparaiso.setVisible(true,false);
				break;
				case 'Region Del Libertador Bernardo O´higgins':
					comunaLibertador.setVisible(true,false);
				break;
				case 'Region Del Maule':
					comunaMaule.setVisible(true,false);
				break;
				case 'Region Del Bio-Bio':
					comunaBio.setVisible(true,false);
				break;
				case 'Region De La Araucania':
					comunaAraucania.setVisible(true,false);
				break;
				case 'Region De Los Lagos':
					comunaLagos.setVisible(true,false);
				break;
				case 'Region Aysen del General Carlos Ibanes del Campo':
					comunaAysen.setVisible(true,false);
				break;
				case 'Region de Magallanes y Antartica Chilena':
					comunaMagallanes.setVisible(true,false);
				break;
				case 'Region Metropolitana':
					comunaMetro.setVisible(true,false);
				break;
				case 'Region de los Rios':
					comunaRio.setVisible(true,false);
				break;
				case 'Region de Arica y Parinacota':
					comunaArica.setVisible(true,false);
				break;
				}
           }
        
		/** 
		* Este metodo se encarga de de recibir los valores obtenidos en la interfaz del programa y pasarselos
		* a traves de un objeto a la capa 2 para que esta sea finalice pasandoselo a la capa 3 para que el cliente 
		* sea registrado en la base de datos.  
		* 
		* @author  "Nicolas Delgado"
		*
		*/	            
		public function sendMessage():void
			{								
				
				if(rut.text!="" && rut2.text!=""&& valor==2 || rut.text=="" && rut2.text=="" ){
					c= rw.Valida_Rut(rut.text,rut2.text);
					if(c=="TRUE"){
						labelMessage.text = " ";
					}
					
					else{
						limpiarRut();
						labelMessage.text = "Ingrese el Rut";
					}
									
				}

				
				
				if(vNombre==true && vApellido==true && c=="TRUE"){
				
					cl=new Cliente();
					cl.nombre = nombre.text;
					cl.apellido = apellido.text;
					cl.apellido2 = apellido2.text;
					cl.rut =  rut.text;
					cl.rut2 =  rut2.text;
					cl.telefono = telefono.text;
					cl.telefono2 = telefono2.text;
					cl.celular = celular.text;
					cl.celular2 = celular2.text;
					cl.direccion = direccion.text;
					cl.region = region.selectedLabel;
					cl.email = email.text;
					cl.email2 = email2.text;
					cl.estado=true;
					cl.comuna=SeleccionComunas();
									

					w.regCliente(cl);
					w.addEventListener(ResultEvent.RESULT,registroClienteResultado);			
					
				}
				
				else
				{
					labelMessage.text = "Corriga los datos antes de registrar";
				}					
						
				
			}
			
			/** 
			* Este metodo se encarga de obtener la region seleccionada y pasar el objeto para que
			* este pueda ser guardado en la base de datos.  
			* 
			* @author  "Nicolas Delgado"
			*
			*/	
			public function SeleccionComunas():String{
				if(cl.region=="Region De Tarapaca"){
						return comunas.selectedLabel;
					}  
					
					else if(cl.region=="Region De Antofagasta"){
						return comunaAntofagasta.selectedLabel;
					}
					
					
					else if(cl.region=="Region De Atacama"){
						return comunaAtacama.selectedLabel;
					}
					
					else if(cl.region=="Region De Coquimbo"){
						return comunaCoquimbo.selectedLabel;
					}
					
					else if(cl.region=="Region De Valparaiso"){
						return comunaValparaiso.selectedLabel;
					}
					
					else if(cl.region=="Region Del Libertador Bernardo O´higgins"){
						return comunaLibertador.selectedLabel;
					}	
					
					else if(cl.region=="Region Del Maule"){
						return comunaMaule.selectedLabel;
					}	
					
					else if(cl.region=="Region Del Bio-Bio"){
						return comunaBio.selectedLabel;
					}	
					
					else if(cl.region=="Region De La Araucania"){
						return comunaAraucania.selectedLabel;
					}	
					
					else if(cl.region=="Region De Los Lagos"){
						return comunaLagos.selectedLabel;
					}	
					
					else if(cl.region=="Region Aysen del General Carlos Ibanes del Campo"){
						return comunaAysen.selectedLabel;
					}	
					
					else if(cl.region=="Region de Magallanes y Antartica Chilena"){
						return comunaMagallanes.selectedLabel;
					}		
					
					else if(cl.region=="Region Metropolitana"){
						return comunaMetro.selectedLabel;
					}	
					
					else if(cl.region=="Region de los Rios"){
						return comunaRio.selectedLabel;
					}	
					
					else if(cl.region=="Region de Arica y Parinacota"){
						return comunaArica.selectedLabel;
					}
					return "";
			}
			
			
			/** 
			* Este metodo se encarga de mencionar los posibles errores que pueda arrojar el
			* sistema una vez estando en funcionamiento.  
			* 
			* @author  "Nicolas Delgado"
			*
			*/	
			private function resultHandler(event:ResultEvent):void
			{
				var message:String= event.result as String;
                Alert.show(message);
			}
			
			/** 
			* Este metodo se encarga de enviar el resultado obtenido en capa en la inserccion de los datos si 
			* se pudo desarrollar la insercion o no y mostrar al usuario el resultado.  
			* 
			* @author  "Nicolas Delgado"
			*
			*/	
			
			private function registroClienteResultado(event:ResultEvent):void
			{
				var message:String= event.result as String;	
				var msj:String = "";
				if(message=="1"){
					msj = nombre.text + " "+ apellido.text+" fue Registrado";
				 	limpiarTodo(); 					
    		 	}
				else{
					 msj= "Cliente previamente registrado, elija otro rut de cliente"; 				
				}		
					labelMessage.text=msj;
			}

			/** 
			* Este metodo se encarga de realizar todas las validaciones desarrollas por teclado por el usuario
			* en cada uno de los parametros de inserccion de datos para que estos no se encuentren vacios al 
			* momento que el usuario quiera insertar datos a la base de datos.  
			* 
			* @author  "Nicolas Delgado"
			*
			*/	
            private function validaciones():void{
            	nombre.addEventListener(KeyboardEvent.KEY_UP,validarSoloString);
            	apellido.addEventListener(KeyboardEvent.KEY_UP,validarSoloString1);
            	apellido2.addEventListener(KeyboardEvent.KEY_UP,validarSoloString2);
            	celular.addEventListener(KeyboardEvent.KEY_UP,validarNumero);
            	celular2.addEventListener(KeyboardEvent.KEY_UP,validarNumero2);
            	telefono.addEventListener(KeyboardEvent.KEY_UP,validarNumero3);
            	telefono2.addEventListener(KeyboardEvent.KEY_UP,validarNumero4);
            	email.addEventListener(KeyboardEvent.KEY_UP,validarEmail);
            	email2.addEventListener(KeyboardEvent.KEY_UP,validarEmail2);
            	nombre.addEventListener(MouseEvent.CLICK,validarNombre);
            	apellido.addEventListener(MouseEvent.CLICK,validarApellido);
            	apellido2.addEventListener(MouseEvent.CLICK,validarApellido2);
            }
           
  		   /** 
		   * Este metodo se encarga de comprobar que el nombre ingresado por el usuario
		   * no sea inferior a un tamaño de dos para poder hacer una insercion correcta
		   * de los datos.  
		   * 
		   * @author  "Nicolas Delgado"
		   *
		   */	 
           public function validarNombre(event:Event):void
           {
           	if(nombre.text.length>2)
				{
					
					vNombre		= true;
					labelMessage.text = "";
				}
				else
				{
					
					vNombre		= false;
					labelMessage.text = "Ingrese el nombre mas largo";
				}	
           }
 
   		   /** 
		   * Este metodo se encarga de comprobar que el apellido paterno ingresado por el usuario
		   * no sea inferior a un tamaño de dos para poder hacer una insercion correcta
		   * de los datos.  
		   * 
		   * @author  "Nicolas Delgado"
		   *
		   */	          
           public function validarApellido(event:Event):void
           {
           	if(apellido.text.length>2)
				{
					
					vApellido		= true;
					labelMessage.text = "";
				}
				else
				{
					
					vApellido		= false;
					labelMessage.text = "Ingrese el apellido paterno mas largo";
				}	
           }
           
  		   /** 
		   * Este metodo se encarga de comprobar que el apellido materno ingresado por el usuario
		   * no sea inferior a un tamaño de dos para poder hacer una insercion correcta
		   * de los datos.  
		   * 
		   * @author  "Nicolas Delgado"
		   *
		   */	
           public function validarApellido2(event:Event):void{
           	if(apellido2.text.length>2)
				{
					
					vApellido2		= true;
					labelMessage.text = "";
				}
				else
				{
					
					vApellido2		= false;
					labelMessage.text = "Ingrese el apellido materno mas largo";
				}	
           }
           
  		   /** 
		   * Este metodo se encarga de comprobar que el nombre ingresado por el usuario
		   * no posea ningun tipo de caracter distinto a letras para poder hacer una 
		   * insercion correcta de los datos.  
		   * 
		   * @author  "Nicolas Delgado"
		   *
		   */	           
            private function validarSoloString(event:Event):void{
            	if(Validacion.sinNumero(nombre.text)==true)
				{
					
					vNombre		= true;
					labelMessage.text = "";
				}
				else
				{
					
					vNombre		= false;
					labelMessage.text = "Ingrese Solamente Letras";
				}	
            }

  		     /** 
		     * Este metodo se encarga de comprobar que el apellido paterno ingresado por el usuario
		     * no posea ningun tipo de caracter distinto a letras para poder hacer una 
		     * insercion correcta de los datos.  
		     * 
		     * @author  "Nicolas Delgado"
		     *
		     */	               
             private function validarSoloString1(event:Event):void{
            	
            	
            	if(Validacion.sinNumero(apellido.text)==true)
				{
					vApellido		= true;
					labelMessage.text = "";
				}
				else
				{
					vApellido		= false;
					labelMessage.text = "Ingrese Solamente Letras";
				}	
            }

  		     /** 
		     * Este metodo se encarga de comprobar que el apellido materno ingresado por el usuario
		     * no posea ningun tipo de caracter distinto a letras para poder hacer una 
		     * insercion correcta de los datos.  
		     * 
		     * @author  "Nicolas Delgado"
		     *
		     */	             
            private function validarSoloString2(event:Event):void{
            	if(Validacion.sinNumero(apellido2.text)==true)
				{
					vApellido2		= true;
					labelMessage.text = "";
				}
				else
				{
					vApellido2		= false;
					labelMessage.text = "Ingrese Solamente Letras";
				}	
            }

  		     /** 
		     * Este metodo se encarga de comprobar que el celular ingresado por el usuario
		     * no posea ningun tipo de caracter distinto a un digito para poder hacer una 
		     * insercion correcta de los datos.  
		     * 
		     * @author  "Nicolas Delgado"
		     *
		     */	 
             private function validarNumero(event:Event):void{
            	if(Validacion.Numero(celular.text)==true)
				{
					vCelular		= true;
					labelMessage.text = "";
				}
				else
				{
					vCelular		= false;
					labelMessage.text = "Ingrese Solamente Numeros";
				}	
            }

  		     /** 
		     * Este metodo se encarga de comprobar que el celular ingresado por el usuario
		     * no posea ningun tipo de caracter distinto a un digito para poder hacer una 
		     * insercion correcta de los datos.  
		     * 
		     * @author  "Nicolas Delgado"
		     *
		     */	             
            private function validarNumero2(event:Event):void{
            	if(Validacion.Numero(celular2.text)==true)
				{
					vCelular2		= true;
					labelMessage.text = "";
				}
				else
				{
					vCelular2		= false;
					labelMessage.text = "Ingrese Solamente Numeros";
				}	
            }

  		     /** 
		     * Este metodo se encarga de comprobar que el telefono ingresado por el usuario
		     * no posea ningun tipo de caracter distinto a un digito para poder hacer una 
		     * insercion correcta de los datos.  
		     * 
		     * @author  "Nicolas Delgado"
		     *
		     */	             
             private function validarNumero3(event:Event):void{
            	if(Validacion.Numero(telefono.text)==true)
				{
					vTelefono		= true;
					labelMessage.text = "";
				}
				else
				{
					vTelefono		= false;
					labelMessage.text = "Ingrese Solamente Numeros";
				}	
            }
 
  		    /** 
		    * Este metodo se encarga de comprobar que el telefono ingresado por el usuario
		    * no posea ningun tipo de caracter distinto a un digito para poder hacer una 
		    * insercion correcta de los datos.  
		    * 
		    * @author  "Nicolas Delgado"
		    *
		    */	             
            private function validarNumero4(event:Event):void{
            	if(Validacion.Numero(telefono2.text)==true)
				{
					vTelefono2		= true;
					labelMessage.text = "";
				}
				else
				{
					vTelefono2			= false;
					labelMessage.text = "Ingrese Solamente Numeros";
				}	
            }

  		     /** 
		     * Este metodo se encarga de comprobar que el email cumpla con todos los parametros 
		     * correctos exigidos, sin que ningun caracter falte al momento del ingreso del un
		     * email.  
		     * 
		     * @author  "Nicolas Delgado"
		     *
		     */	             
             private function validarEmail(event:Event):void{
            	
            	var em:Boolean;
            	
            	em= e.isEmail(email.text);
            	
            	if(em==true)
				{
					
					vEmail		= true;
					labelMessage.text = "";
				}
				else
				{
					
					vEmail		= false;
					labelMessage.text = "Ingrese Email Correctamente";
					//limpiarEmail();
					
				}
            }

  		    /** 
		    * Este metodo se encarga de comprobar que el email ingresado anteriormente sea igual al 
		    * email que se encuentra en el segundo parametro de inserccion.  
		    * 
		    * @author  "Nicolas Delgado"
		    *
		    */	             
            private function validarEmail2(event:Event):void{
            	if(email.text == email2.text)
				{
					vEmail2 = true;	
					labelMessage.text = "";			
				}
				else
				{
					vEmail2 = false;	
					labelMessage.text = "Ingrese un email que coincida con el anterior";			
				}
            }

			/**
			* Este metodo se encarga de limpiar los campos del
			* Rut si este es incorrecto, para que el usuario pueda tener mejor
			* Manejo de lugar donde se produjo el error. 
			* 
			* @author  "Nicolas Delgado"
			*
			*/					
			public function limpiarRut():void
			{
				rut.text= "";
				rut2.text = "";				
			}

			/**
			* Este metodo se encarga de limpiar los campos de la
			* confirmacion del mailporque tiene que tener un grado de concordancia
			* al email ingresado en el textInput anterior. 
			* 
			* @author  "Nicolas Delgado"
			*
			*/			
			public function limpiarEmail():void
			{
				email.text = "";				
			}

			/**
			* Este metodo se encarga de limpiar todos los  campos de la
			* componente, una vez ingresados los datos  a la base de datos,
			* sin mayor problema.
			* 
			* @author  "Nicolas Delgado"
			*
			*/				
			public function limpiarTodo():void
			{
				nombre.text="";
				apellido.text="";
				apellido2.text="";
				rut.text="";
				rut2.text="";
				telefono.text="";
				telefono2.text="";
				celular.text="";
				celular2.text="";
				direccion.text="";
				email.text = "";
				email2.text = "";	
				region.text="";	
				comunas.text="";	
				comunaAntofagasta.text="";
				comunaAtacama.text="";
				comunaCoquimbo.text="";	
				comunaValparaiso.text="";
				comunaLibertador.text="";
				comunaMaule.text="";
				comunaBio.text="";
				comunaAraucania.text="";
				comunaLagos.text="";
				comunaAysen.text="";
				comunaMagallanes.text="";
				comunaMetro.text="";
				comunaRio.text="";
				comunaArica.text="";
				labelMessage.text ="";
				Check.selection=null;
				valor=0;
				this.cancelarRegistrar();
			}
			
  		    /** 
		    * Este metodo se encarga de  que al momento que el usuario seleccione el boton cancelar se aplique
		    * el funcionamiento de abrir el panel de administracion y resetear todos los datos que fueron ingresados
		    * por el usuario.  
		    * 
		    * @author  "Nicolas Delgado"
		    *
		    */	
			private function cancelarRegistrar():void
			{
				Application.application.setInvisible();
            	Application.application.panel2.setVisible(true,false);
            	Application.application.AdmOpciones1.setVisible(true,false);
			}
			
			/** 
		    * Este metodo tiene la finalidad que al momento de que el usuario ingrese el rut existen dos checkbox
		    * que le permitiran al usuario poder seleccionar si el usuario es nuevo existira una comprobacion del 
		    * rut, mientras que si el usuario es antiguo no existira ninguntipo de comprobacion de rut.  
		    * 
		    * @author  "Nicolas Delgado"
		    *
		    */	
			private function changeData():void
			{
			
			if(Check.selectedValue=="Antiguo"){
	 		   c="TRUE";
	 		   //labelMessage.text = "antiguo "+c;
	 		  
	 		}
			
				
			if(Check.selectedValue=="Nuevo"){
				//rw.addEventListener(ResultEvent.RESULT,resultHandler);
				//var c:String;	
	 		  /*if(rut.text!="" && rut2.text!=""){
					c= rw.Valida_Rut(rut.text,rut2.text);
					//rw.addEventListener(ResultEvent.RESULT,resultHandler);
					//c="TRUE";
					if(c!="TRUE"){
						labelMessage.text = " ";
					}
					
					else{
						labelMessage.text = "Ingrese el Rut";
						limpiarRut();
					}
									
				}*/
				valor=2;
				//labelMessage.text = "nuevo"+c;
	 		}
	 		

	 		
	 		
			}
			

		
		]]>
	</mx:Script>
	
	<!-- Nombre -->
	<mx:Label x="25" y="10" text="Nombre:" width="97" />
	<mx:TextInput restrict="A-Z a-z ñ Ñ Á É Í Ó Ú á é í ó ú"  x="143" y="8" width="201" id="nombre" click="validaciones()" maxChars="12"/>	

    <!-- Apellido Paterno -->
	<mx:Label x="24" y="60" text="Apellido paterno:" width="112" />
	<mx:TextInput restrict="A-Z a-z" x="143" y="58" width="201" id="apellido" click="validaciones()" maxChars="12"/>
	
	<!-- Apellido Materno -->
	<mx:Label x="412" y="60" text="Apellido materno:" width="112" />
	<mx:TextInput restrict="A-Z a-z" x="523" y="58" width="201" id="apellido2" click="validaciones()" maxChars="12"/>
	
	<!-- Rut -->	
	<mx:Label x="24" y="112" text="Rut:" width="97"/>
	<mx:TextInput restrict="0-9" x="218" y="108" width="80" id="rut"  maxChars="8"/>	
	<mx:Label x="561" y="160" text="-" textAlign="center"/>
	<mx:TextInput restrict="0-9 K" x="324" y="108" width="20" id="rut2" maxChars="1"/>
	
	<!-- Telefono -->
	<mx:Label x="24" y="158" text="Teléfono fijo:" width="97"/>
	<mx:TextInput restrict="0-9" x="143" y="158" width="40" id="telefono" click="validaciones()" maxChars="3"/>
	<mx:Label x="306" y="110" text="-" textAlign="center"/>
	<mx:TextInput restrict="0-9" x="208" y="158" width="136" id="telefono2" click="validaciones()" maxChars="10"/>
	
		
    <!-- Celular -->
	<mx:Label x="412" y="160" text="Celular:" click="validaciones()" width="97"/>
	<mx:TextInput restrict="0-9" x="523" y="158" width="40" id="celular" maxChars="2"/>
	<mx:Label x="187" y="160" text="-" textAlign="center"/>
	<mx:TextInput restrict="0-9" x="582" y="158" width="142" id="celular2" click="validaciones()" maxChars="10"/>
	
	<!-- Direccion -->	
	<mx:Label x="24" y="210" text="Dirección:" width="97"/>
	<mx:TextInput  restrict="0-9 # A-Z a-z" x="143" y="208" width="201" id="direccion" maxChars="30"/>
	
	<!-- Regiones -->	
	<mx:Label x="24" y="260" text="Región:" width="112"/>
	<mx:ComboBox x="144" y="258" width="201" id="region"  visible="true" change="regiones(event)">	
	<mx:ArrayCollection>
	        <mx:Object label=" "/>
			<mx:Object label="Region De Tarapaca"/>
			<mx:Object label="Region De Antofagasta"/>
			<mx:Object label="Region De Atacama"/>
			<mx:Object label="Region De Coquimbo"/>
			<mx:Object label="Region De Valparaiso"/>
			<mx:Object label="Region Del Libertador Bernardo O´higgins"/>
			<mx:Object label="Region Del Maule"/>
			<mx:Object label="Region Del Bio-Bio"/>
			<mx:Object label="Region De La Araucania"/>
			<mx:Object label="Region De Los Lagos"/>
			<mx:Object label="Region Aysen del General Carlos Ibanes del Campo"/>
			<mx:Object label="Region de Magallanes y Antartica Chilena"/>
			<mx:Object label="Region Metropolitana"/>
			<mx:Object label="Region de los Rios"/>
			<mx:Object label="Region de Arica y Parinacota"/>			
		</mx:ArrayCollection>
	</mx:ComboBox>	
	
	<!-- Region Tarapaca -->
	<mx:Label x="412" y="260" text="Comuna:" width="112"/>
	<mx:ComboBox x="523" y="258" width="201" id="comunas" visible="false">	
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Alto Hospicio"/>
			<mx:Object label="Camiña"/>
			<mx:Object label="Colchane"/>
			<mx:Object label="Huara"/>
			<mx:Object label="Iquique"/>
			<mx:Object label="Pica"/>
			<mx:Object label="Pozo Almonte"/>
		</mx:ArrayCollection>
	</mx:ComboBox>	
	
	<!-- Region Antofagasta -->
	<mx:ComboBox x="523" y="258" width="201" id="comunaAntofagasta" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Antofagasta"/>
			<mx:Object label="Mejillones"/>
			<mx:Object label="Sierra Gorda"/>
			<mx:Object label="Taltal"/>
			<mx:Object label="Calama"/>
			<mx:Object label="Ollague"/>
			<mx:Object label="San Pedro de Atacama"/>
			<mx:Object label="María Elena"/>
			<mx:Object label="Tocopilla"/>
		</mx:ArrayCollection>
	</mx:ComboBox>	
	
	<!-- Region Atacama-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaAtacama" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Chañaral"/>
			<mx:Object label="Diego de Almagro"/>
			<mx:Object label="Caldera"/>
			<mx:Object label="Copiapó"/>
			<mx:Object label="Tierra Amarilla"/>
			<mx:Object label="Alto del Carmen"/>
			<mx:Object label="Freirina"/>
			<mx:Object label="Huasco"/>
			<mx:Object label="Vallenar"/>
		</mx:ArrayCollection>
	</mx:ComboBox>	
	
	<!-- Region Coquimbo-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaCoquimbo" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Canela"/>
			<mx:Object label="Illapel"/>
			<mx:Object label="Los Vilos"/>
			<mx:Object label="Salamanca"/>
			<mx:Object label="Andacollo"/>
			<mx:Object label="Coquimbo"/>
			<mx:Object label="La Higuera"/>
			<mx:Object label="La Serena"/>
			<mx:Object label="Paihuano"/>
			<mx:Object label="Vicuña"/>
			<mx:Object label="Combarbalá"/>
			<mx:Object label="Monte Patria"/>
			<mx:Object label="Ovalle"/>
			<mx:Object label="Punitaqui"/>
			<mx:Object label="Río Hurtado"/>
		</mx:ArrayCollection>
	</mx:ComboBox>	
	
	<!-- Region Valparaíso-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaValparaiso" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Los Andes"/>
			<mx:Object label="San Esteban"/>
			<mx:Object label="Calle Larga"/>
			<mx:Object label="Rinconada"/>
			<mx:Object label="Isla de Pascua"/>
			<mx:Object label="Petorca"/>
			<mx:Object label="La Ligua"/>
			<mx:Object label="Cabildo"/>
			<mx:Object label="Papudo"/>
			<mx:Object label="Zapallar"/>
			<mx:Object label="San Antonio"/>
			<mx:Object label="Algarrobo"/>
			<mx:Object label="Cartagena"/>
			<mx:Object label="El Quisco"/>
			<mx:Object label="El Tabo"/>
			<mx:Object label="Santo Domingo"/>
			<mx:Object label="San Felipe"/>
			<mx:Object label="Catemu"/>
			<mx:Object label="Llay Llay"/>
			<mx:Object label="Panquehue"/>
			<mx:Object label="Putaendo"/>
			<mx:Object label="Santa María"/>
			<mx:Object label="Quillota"/>
			<mx:Object label="Calera"/>
			<mx:Object label="Hijuelas"/>
			<mx:Object label="Limache"/>
			<mx:Object label="La Cruz"/>
			<mx:Object label="Nogales"/>
			<mx:Object label="Olmué"/>
			<mx:Object label="Valparaíso"/>
			<mx:Object label="Casablanca"/>
			<mx:Object label="Concon"/>
			<mx:Object label="Juan Fernández"/>
			<mx:Object label="Puchuncaví"/>
			<mx:Object label="Quilpué"/>
			<mx:Object label="Quintero"/>
			<mx:Object label="Villa Alemana"/>
			<mx:Object label="Viña del Mar"/>
		</mx:ArrayCollection>
	</mx:ComboBox>
	
	<!--Región Del Libertador Bernardo O´higgins-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaLibertador" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Rancagua"/>
			<mx:Object label="Codegua"/>
			<mx:Object label="Coinco"/>
			<mx:Object label="Coltauco"/>
			<mx:Object label="Doñihue"/>
			<mx:Object label="Graneros"/>
			<mx:Object label="Las Cabras"/>
			<mx:Object label="Mostazal"/>
			<mx:Object label="Machalí"/>
			<mx:Object label="Malloa"/>
			<mx:Object label="Olivar"/>
			<mx:Object label="Peumo"/>
			<mx:Object label="Pichidegua"/>
			<mx:Object label="Quinta de Tilcoco"/>
			<mx:Object label="Rengo"/>
			<mx:Object label="Requinoa"/>
			<mx:Object label="San Vicente"/>
			<mx:Object label="San Fernando"/>
			<mx:Object label="Chépica"/>
			<mx:Object label="Chimbarongo"/>
			<mx:Object label="Lolol"/>
			<mx:Object label="Nancagua"/>
			<mx:Object label="Palmilla"/>
			<mx:Object label="Peralillo"/>
			<mx:Object label="Placilla"/>
			<mx:Object label="Pumanque"/>
			<mx:Object label="Santa Cruz"/>
			<mx:Object label="Pichilemu"/>
			<mx:Object label="La Estrella"/>
			<mx:Object label="Litueche"/>
			<mx:Object label="Marchigue"/>
			<mx:Object label="Navidad"/>
			<mx:Object label="Paredones"/>
		</mx:ArrayCollection>
	</mx:ComboBox>
	
	<!--Región Del Maule-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaMaule" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Cauquenes"/>
			<mx:Object label="Pelluhue"/>
			<mx:Object label="Chanco"/>
			<mx:Object label="Curicó"/>
			<mx:Object label="Teno"/>
			<mx:Object label="Romeral"/>
			<mx:Object label="Molina"/>
			<mx:Object label="Sagrada Familia"/>
			<mx:Object label="Hualañé"/>
			<mx:Object label="Licanten"/>
			<mx:Object label="Vichuquén"/>
			<mx:Object label="Rauco"/>
			<mx:Object label="Linares"/>
			<mx:Object label="Yerbas Buenas"/>
			<mx:Object label="Colbún"/>
			<mx:Object label="Longaví"/>
			<mx:Object label="Parral"/>
			<mx:Object label="Retiro"/>
			<mx:Object label="Villa Alegre"/>
			<mx:Object label="San Javier"/>
			<mx:Object label="Talca"/>
			<mx:Object label="Pelarco"/>
			<mx:Object label="Río Claro"/>
			<mx:Object label="San Clemente"/>
			<mx:Object label="Maule"/>
			<mx:Object label="San Rafael"/>
			<mx:Object label="Empedrado"/>
			<mx:Object label="Pencahue"/>
			<mx:Object label="Constitución"/>
			<mx:Object label="Curepto"/>
		</mx:ArrayCollection>
	</mx:ComboBox>
	
	<!--Región Del Bio Bio-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaBio" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Arauco"/>
			<mx:Object label="Cañete"/>
			<mx:Object label="Contulmo"/>
			<mx:Object label="Curanilahue"/>
			<mx:Object label="Lebu"/>
			<mx:Object label="Los Alamos"/>
			<mx:Object label="Tirua"/>
			<mx:Object label="Los Angeles"/>
			<mx:Object label="Alto Bío-Bío"/>
			<mx:Object label="Antuco"/>
			<mx:Object label="Cabrero"/>
			<mx:Object label="Laja"/>
			<mx:Object label="Mulchén"/>
			<mx:Object label="Nacimiento"/>
			<mx:Object label="Negrete"/>
			<mx:Object label="Quilaco"/>
			<mx:Object label="Quilleco"/>
			<mx:Object label="Santa Bárbara"/>
			<mx:Object label="San Rosendo"/>
			<mx:Object label="Tucapel"/>
			<mx:Object label="Yumbel"/>
			<mx:Object label="Concepción"/>
			<mx:Object label="Chiguayante"/>
			<mx:Object label="Coronel"/>
			<mx:Object label="Florida"/>
			<mx:Object label="Hualpén"/>
			<mx:Object label="Hualqui"/>
			<mx:Object label="Lota"/>
			<mx:Object label="Penco"/>
			<mx:Object label="San Pedro de la Paz"/>
			<mx:Object label="Santa Juana"/>
			<mx:Object label="Talcahuano"/>
			<mx:Object label="Tomé"/>
			<mx:Object label="Chillán"/>
			<mx:Object label="Bulnes"/>
			<mx:Object label="Chillán Viejo"/>
			<mx:Object label="Cobquecura"/>
			<mx:Object label="Coelemu"/>
			<mx:Object label="Coihueco"/>
			<mx:Object label="El Carmen"/>
			<mx:Object label="Ninhue"/>
			<mx:Object label="Ñiquén"/>
			<mx:Object label="Pemuco"/>
			<mx:Object label="Pinto"/>
			<mx:Object label="Portezuelo"/>
			<mx:Object label="Quillón"/>
			<mx:Object label="Quirihue"/>
			<mx:Object label="Ranquil"/>
			<mx:Object label="San Carlos"/>
			<mx:Object label="San Fabián"/>
			<mx:Object label="San Ignacio"/>
			<mx:Object label="San Nicolás"/>
			<mx:Object label="Trehuaco"/>
			<mx:Object label="Yungay"/>
		</mx:ArrayCollection>
	</mx:ComboBox>		
	
	<!--Región De La Araucania-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaAraucania" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Temuco"/>
			<mx:Object label="Carahue"/>
			<mx:Object label="Cholchol"/>
			<mx:Object label="Cunco"/>
			<mx:Object label="Curarrehue"/>
			<mx:Object label="Freire"/>
			<mx:Object label="Galvarino"/>
			<mx:Object label="Gorbea"/>
			<mx:Object label="Lautaro"/>
			<mx:Object label="Loncoche"/>
			<mx:Object label="Melipeuco"/>
			<mx:Object label="Nueva Imperial"/>
			<mx:Object label="Padre las Casas"/>
			<mx:Object label="Perquenco"/>
			<mx:Object label="Pitrufquén"/>
			<mx:Object label="Pucón"/>
			<mx:Object label="Saavedra"/>
			<mx:Object label="Teodoro Schmidt"/>
			<mx:Object label="Toltén"/>
			<mx:Object label="Vilcún"/>
			<mx:Object label="Villarrica"/>
			<mx:Object label="Angol"/>
			<mx:Object label="Collipulli"/>
			<mx:Object label="Curacautín"/>
			<mx:Object label="Ercilla"/>
			<mx:Object label="Lonquimay"/>
			<mx:Object label="Los Sauces"/>
			<mx:Object label="Lumaco"/>
			<mx:Object label="Purén"/>
			<mx:Object label="Renaico"/>
			<mx:Object label="Traiguén"/>
			<mx:Object label="Victoria"/>			
		</mx:ArrayCollection>
	</mx:ComboBox>	
	
	<!--Región De Los Lagos-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaLagos" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Chiloé"/>
			<mx:Object label="Ancud"/>
			<mx:Object label="Castro"/>
			<mx:Object label="Curaco de Veléz"/>
			<mx:Object label="Chonchi"/>
			<mx:Object label="Dalcahue"/>
			<mx:Object label="Puqueldón"/>
			<mx:Object label="Queilén"/>
			<mx:Object label="Quellón"/>
			<mx:Object label="Quemchi"/>
			<mx:Object label="Quinchao"/>
			<mx:Object label="Calbuco"/>
			<mx:Object label="Cochamó"/>
			<mx:Object label="Fresia"/>
			<mx:Object label="Frutillar"/>
			<mx:Object label="Los Muermos"/>
			<mx:Object label="Llanquihue"/>
			<mx:Object label="Maullín"/>
			<mx:Object label="Puerto Montt"/>
			<mx:Object label="Puerto Varas"/>
			<mx:Object label="Osorno"/>
			<mx:Object label="Puerto Octay"/>
			<mx:Object label="Purranque"/>
			<mx:Object label="Puyehue"/>
			<mx:Object label="Río Negro"/>
			<mx:Object label="San Juan de la Costa"/>
			<mx:Object label="San Pablo"/>
			<mx:Object label="Chaitén"/>
			<mx:Object label="Futaleufú"/>
			<mx:Object label="Hualaihué"/>
			<mx:Object label="Palena"/>
			<mx:Object label="Victoria"/>			
		</mx:ArrayCollection>
	</mx:ComboBox>		
	
	<!--Región Aysén del General Carlos Ibáñes del Campo-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaAysen" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Aysén"/>
			<mx:Object label="Cisnes"/>
			<mx:Object label="Guaitecas"/>
			<mx:Object label="Coihaique"/>
			<mx:Object label="Lago Verde"/>
			<mx:Object label="Cochrane"/>
			<mx:Object label="O'Higgins"/>
			<mx:Object label="Tortel"/>
			<mx:Object label="Chile Chico"/>
			<mx:Object label="Río Ibáñez"/>		
		</mx:ArrayCollection>
	</mx:ComboBox>

	<!--Región de Magallanes y Antártica Chilena-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaMagallanes" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Navarino"/>
			<mx:Object label="Antártica"/>
			<mx:Object label="Punta Arenas"/>
			<mx:Object label="Río Verde"/>
			<mx:Object label="Laguna Blanca"/>
			<mx:Object label="San Gregorio"/>
			<mx:Object label="Porvenir"/>
			<mx:Object label="Primavera"/>
			<mx:Object label="Timaukel"/>
			<mx:Object label="Natales"/>	
			<mx:Object label="Torres del Paine"/>	
		</mx:ArrayCollection>
	</mx:ComboBox>
	
	<!--Región Metropolitana-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaMetro" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Colina"/>
			<mx:Object label="Lampa"/>
			<mx:Object label="Til Til"/>
			<mx:Object label="Puente Alto"/>
			<mx:Object label="Pirque"/>
			<mx:Object label="San José  de Maipo"/>
			<mx:Object label="Buin"/>
			<mx:Object label="Calera de Tango"/>
			<mx:Object label="Paine"/>
			<mx:Object label="San Bernardo"/>
			<mx:Object label="Melipilla"/>
			<mx:Object label="María Pinto"/>
			<mx:Object label="Curacaví"/>
			<mx:Object label="Alhué"/>
			<mx:Object label="San Pedro"/>
			<mx:Object label="Santiago"/>
			<mx:Object label="Talagante"/>
			<mx:Object label="El Monte"/>
			<mx:Object label="Isla de Maipo"/>
			<mx:Object label="Padre Hurtado"/>
			<mx:Object label="Peñaflor"/>					
		</mx:ArrayCollection>
	</mx:ComboBox>	

	<!--Región de los Ríos-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaRio" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="La Unión"/>
			<mx:Object label="Futrono"/>
			<mx:Object label="Lago Ranco"/>
			<mx:Object label="Río Bueno"/>
			<mx:Object label="Valdivia"/>
			<mx:Object label="Corral"/>
			<mx:Object label="Lanco"/>
			<mx:Object label="Los Lagos"/>
			<mx:Object label="Máfil"/>
			<mx:Object label="Mariquina"/>	
			<mx:Object label="Paillaco"/>
			<mx:Object label="Panguipulli"/>
			<mx:Object label="Río Bueno"/>		
		</mx:ArrayCollection>
	</mx:ComboBox>
	
	<!--Región de Arica y Parinacota-->
	<mx:ComboBox x="523" y="258" width="201" id="comunaArica" visible="false">
	<mx:ArrayCollection>
			<mx:Object label=""/>
			<mx:Object label="Arica"/>
			<mx:Object label="Camarones"/>
			<mx:Object label="Putre"/>
			<mx:Object label="General Lagos"/>	
		</mx:ArrayCollection>
	</mx:ComboBox>
	
	<mx:Label x="25" y="314" text="E-Mail:" width="97"/>
	<mx:TextInput x="144" y="312" width="201" id="email" click="validaciones()" maxChars="40" editable="true" enabled="true" displayAsPassword="false"/>	
	
    <mx:Label x="412" y="314" text="Repetir e-mail:" width="132"/>
	<mx:TextInput x="523" y="312" width="201" id="email2" maxChars="20"/>

	<mx:Button x="522" y="353" width="102" label="Registrar" id="guardarClienteIng" click="{sendMessage()}" height="23" cornerRadius="6">
	</mx:Button>
	
	<mx:Button x="647" y="353" width="102" label="Cancelar" id="cancelarClienteIng" click="{limpiarTodo()}"  height="23" cornerRadius="6">
	</mx:Button>	
	<mx:Label id="labelMessage" x="176" y="399" width="407" textAlign="center" fontWeight="bold" height="17"/>
	<mx:RadioButtonGroup id="Check" change="changeData()"/>
	<mx:RadioButton x="143" y="93" label="Nuevo" groupName="Check" />
	<mx:RadioButton x="143" y="119" label="Antiguo" groupName="Check"/>


	
</mx:Panel>
