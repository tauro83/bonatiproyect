<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
xmlns:fc="http://www.adobe.com/2006/fc"	width="779" height="466" borderColor="#15AD8F" title="Eliminar Pago" xmlns:ns1="com.adobe.flex.extras.controls.*"  xmlns:ns2="util.*">
  <mx:Script>
	 <![CDATA[
	 
	 	import services.AddMascotaService;
        	import mx.controls.DateField;
        	import mx.controls.Alert;
            import mx.collections.ArrayCollection;
        	import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.ValidationResultEvent;            
  			import flash.display.Sprite;
		    import flash.events.*;
		    import flash.net.FileReference;
		    import flash.net.FileReferenceList;
		    import mx.rpc.events.ResultEvent;
			import mx.controls.Image;
			import mx.core.Application;
		    import petshop.ElimPagoService;
		    import transferObjects.Pago;
			[Bindable]
			private var persons:ArrayCollection;
			[Bindable]
			private var nroSelec:int = 0;
			
			
			/**
			 * se obtienen todas los pagos que están registrados en la
			 * base de datos para ser mostrados dentro del datagrid
			 */
			
			public function getAllPagos():void
			{
				var usuarioElimService:ElimPagoService = new ElimPagoService();
				usuarioElimService.addEventListener(ResultEvent.RESULT,getAllPagosResult);
				usuarioElimService.getAllPagos();
			}
			/**
			 * Obtiene el resultado del llamado a la capa dos y tres
			 * del sistema
			 */
			private function getAllPagosResult(event:ResultEvent):void
			{
				persons = event.result as ArrayCollection;
			}
			
	 	  	/**
		 	 * 	Metodo que cancela la operacion de editar una mascota
			 */
			
			private function cancelarAction():void{
				this.setVisible(false,false);
				Application.application.panel2.setVisible(true,false);
			}
			/**
			 * Selecciona o deselecciona todos los checkboxes
			 */
			private function selectAll():void{
                var allRows:int = persons.length;
                for (var i:int = 0; i < allRows; i++){
                    if (todo.selected)
                        persons[i].sel = true;
                    else
                        persons[i].sel = false;
                }
                tablaPagos.dataProvider = persons;
            }
				
			/**
            * elimina una fila dentro de la tabla
            */
           	private function deleteRow():void {
			 Alert.show("Está seguro que desea eliminar Pago ","Confirme eliminación ", Alert.YES | Alert.NO, this, delRowHandler, null, Alert.NO);
			}
			/**
			 * Purga un pago que está en la base de datos
			 * 
			 */
			private function deletePago(fecha:String, hora:String):void
			{
				var usuarioElimService:ElimPagoService=new ElimPagoService();
				usuarioElimService.addEventListener(ResultEvent.RESULT,deletePagoResult);
				usuarioElimService.deletePago(fecha, hora);
			}
			/**
			 * 
			 * Muestra un mensaje de acuerdo al resultado de la operación
			 * en la capa dos
			 */
			private function deletePagoResult(event:ResultEvent):void
			{
				var result:int = event.result as int ;
				if(nroSelec>1){
					labelMessage.text = "Pagos Eliminados con éxito";
				}
				else
					labelMessage.text = "Pago Eliminado con éxito";
				getAllPagos();
			}
			/**
			 * es la funcion que es llamada desde el mensaje de confirmación de la tarea
			 */
			private function delRowHandler(evt:CloseEvent):void {
			    if ((evt.detail == Alert.NO) || (evt.detail == Alert.CANCEL)) return;
			  removeTaskRecord();
			}
			/**
			 * Marca o desmarca los checkboxes
			 * 
			 */
			private function removeTaskRecord():void
            {
                var allRows:int = persons.length;
                for (var i:int = 0; i < allRows; i++){
                    if (persons[i].sel)
                	{
                       	nroSelec++;
                        deletePago(persons[i].fecha, persons[i].hora);
                        persons.removeItemAt(i);
                        allRows = persons.length;
                        tablaPagos.dataProvider = persons;
                        i=-1;
                    }   
                }              
            }
			
			/**
			 * Se hace visible el input correspondiente a la opción
			 * elegida en el combobox
			 */
			private function seleccionarBusqueda (event:Event):void
            {   
            	fecha.setVisible(false,false);
				hora.setVisible(false,false);
				total.setVisible(false,false);
				getAllPagos();
            	switch (combobox.selectedLabel)
				{
				case 'Fecha':		
					fecha.setVisible(true,false);
				break; 
				case 'Hora':		
					hora.setVisible(true,false);
				break; 
				case 'Total':
					total.setVisible(true,false);
				break;
				}
            }
            /**
			 * Resetea el mensaje del panel
			 * @autor Erwin Díaz
			 */
			public function resetVar ():void
            {   
            	labelMessage.text = "";
            }
			
       ]]>
    </mx:Script>     
	
	<mx:DataGrid x="25" y="88" width="709" height="272" id="tablaPagos" dataProvider="{persons}">

		<mx:columns>
			<mx:DataGridColumn width="10" headerText="" dataField="checkbox" id="checkbox" draggable="false">
			 	<mx:itemRenderer>
                        <mx:Component>
                            <mx:CheckBox click="data.sel=!data.sel"  selected="{data.sel}"/>            
                        </mx:Component>
             	</mx:itemRenderer>
            </mx:DataGridColumn>
			<mx:DataGridColumn headerText="Fecha" dataField="fecha" width="80"/>
			<mx:DataGridColumn headerText="Hora" dataField="hora" width="120"/>
			<mx:DataGridColumn headerText="Total" dataField="total" width="70"/>
		</mx:columns>
	</mx:DataGrid>
	
	<!-- AutoComplete -->
	<fc:AutoComplete id="fecha" x="572" y="24" width="150" dataProvider="{persons}" labelField="fecha" visible="false" toolTip="ingrese texto para búsqueda"/>
	<fc:AutoComplete id="hora" x="572" y="24" width="150" dataProvider="{persons}" labelField="hora" visible="false" toolTip="ingrese texto para búsqueda"/>
	<fc:AutoComplete id="total" x="572" y="24" width="150" dataProvider="{persons}" labelField="total" visible="false" toolTip="ingrese texto para búsqueda"/>
	
	<!-- Opciones de busqueda -->
	<mx:ComboBox x="96" y="24" width="150" id="combobox" change="seleccionarBusqueda(event)" toolTip="Seleccione un parámetro de búsqueda">
		<mx:ArrayCollection>
			<mx:Object label="-Seleccione-"/>
			<mx:Object label="Fecha"/>
			<mx:Object label="Hora"/>
			<mx:Object label="Total"/> 
		</mx:ArrayCollection>
	</mx:ComboBox>

	
	<mx:Button x="632" y="368" label="Cancelar" width="102" id="cancelar" visible="true" click="{cancelarAction()}" height="23"/>
	<mx:Button x="522" y="368" label="Eliminar" width="102" id="eliminar" visible="true" click="{deleteRow()}" height="23"/>
	<mx:Label x="167" y="399" width="407" height="17" id="labelMessage" textAlign="center" fontWeight="bold"/>
	<mx:CheckBox x="25" y="62" id="todo" click="{selectAll()}" toolTip="Selecciona o deselecciona todo"/>
	<mx:Label x="45" y="62" text="Seleccionar todo"/>
	<mx:Text x="25" y="26" id="textFiltrar" text="Filtrar por"/>
	<mx:Label x="518" y="26" text="Buscar"/>
	
</mx:Panel>