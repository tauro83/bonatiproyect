<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="779" height="466" borderColor="#15AD8F" xmlns:ns1="util.*" title="Eliminar Producto" xmlns:fc="http://www.adobe.com/2006/fc" >
	<mx:Script>
		<![CDATA[
			import mx.controls.List;
			import transferObjects.Producto;

			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			import mx.events.CloseEvent;
			import mx.core.Application;
			 
			import flash.events.MouseEvent;
            import mx.events.FlexEvent;
            import mx.controls.CheckBox;
			import mx.rpc.events.FaultEvent;
			import mx.events.DropdownEvent;
			
			[Bindable]private var productosActivos:ArrayCollection;
			[Bindable]private var productosEspecificos:ArrayCollection;
			[Bindable]private var cantidad:ArrayCollection = new ArrayCollection();
			
			[Bindable]private var productosInactivos:ArrayCollection;
			private var numero:int;
			private var pro:Producto= new Producto();
			private var i:int;
			
			public var ps:EliminarProductoService = new EliminarProductoService();
			
			
			
			public function getProductosActivosTipo():void{
				
				var  ps:EliminarProductoService = new EliminarProductoService();
				ps.addEventListener(ResultEvent.RESULT,getProductosActivosTipoResult);
				{ps.getProductosActivosTipo()};
			 	
	
			}
			
			 public function getProductosActivosTipoResult(event:ResultEvent):void
		   {
		   		productosActivos = event.result as ArrayCollection;
		   	    dg.dataProvider = productosActivos;		   		
		   		
		   }
		   
		         /**
			* Se hace visible el input correspondiente a la opción
			* elegida en el combobox, las cuales pueden ser por el nombre,
			* precio, categoría, descripción, codigo barra.
			*/
            private function seleccionarBusqueda (event:Event):void
            {   
            	inputNombreProducto.setVisible(false,false);
				inputCategoria.setVisible(false,false);
				inputPrecio.setVisible(false,false);
				inputDescripcion.setVisible(false,false);
				inputCodigoBarra.setVisible(false,false);
				textBuscar.setVisible(true, false);
				this.getProductosActivosTipo();
				
            	switch (combobox.selectedLabel)
				{
					
			    /**
			    * El usuario Selecciona la opción nombre producto
			    */
				case 'Nombre Producto':		
					inputNombreProducto.setVisible(true,false);
					inputNombreProducto.selectedItem=false;
					
				break; 
				
			    /**
			    * El usuario Selecciona la opción categoría
			    */
				case 'Categoria':
					inputCategoria.setVisible(true,false);
					inputCategoria.selectedItem=false;
				break;
				
			    /**
			    * El usuario Selecciona la opción precio
			    */				
				case 'Precio':
					inputPrecio.setVisible(true,false);
					inputPrecio.selectedItem=false;
				break;
				
			    /**
			    * El usuario Selecciona la opción descripción
			    */
				case 'Descripcion':
					inputDescripcion.setVisible(true,false);
					inputDescripcion.selectedItem=false;
				break;
				
			    /**
			    * El usuario Selecciona la opción código barra
			    */
				case 'Codigo Barra':
					inputCodigoBarra.setVisible(true,false);
					inputCodigoBarra.selectedItem=false;
				break;
				}
            }
		   
		   
			public function iniciar():void{
				
				{getProductosActivosTipo()};
				this.currentState = '';	
					 
			   	ver.enabled= false;
			   	todo.selected = false;
/* 			    reactivar.enabled= false;
            	purgar.enabled = false;  */
			   	labelMessage.text = 'Listado de productos actuales';
			 	
			 }
			 
		public function pasarADetalle():void
		{
			pro.nombre      = dg.selectedItem.nombre;
			pro.precio      = dg.selectedItem.precio;
			pro.categoria   = dg.selectedItem.categoria;
			pro.descripcion = dg.selectedItem.descripcion;
			
 				currentState = 'VerDetalle';
		}
		
		public function PurgarProductoTipo():void
		{
			var  ps:EliminarProductoService = new EliminarProductoService();
				 ps.addEventListener(ResultEvent.RESULT,purgarProductoTipoResult);
				 {ps.PurgarProductoTipo(nombre.text, precio.text, categoria.text, descripcion.text)};
		}
		
		   public function purgarProductoTipoResult(event:ResultEvent):void
		   {
		   	
		   		var result:int = event.result as int ;
				if(result>0)
				{
				   labelMessage.text = 'Error al purgar el Producto'; 
				}
				else labelMessage.text ='Producto purgado correctamente'; 
				{getProductosActivosTipo()};
				this.currentState = '';
		   }

		   public function anularProducto():void
		   {
				   	var codigo:String = dg.selectedItem.codigo;
				   	
				   	var actual:int = cant.value;
				   	
				   	var  ps:EliminarProductoService = new EliminarProductoService();
						ps.addEventListener(ResultEvent.RESULT,anularproductoResult);
		
				   	
				   	var numero:int = canti.value;
							ps.anularProducto(codigo, actual - numero);
		   
		   }
		   public function anularproductoResult(event:ResultEvent):void
		   {
		   	
		   		var result:int = event.result as int ;
				if(result>0)
				{
				   labelMessage.text = 'Producto eliminado correctamente'; 
				}
				else labelMessage.text ='Producto eliminado correctamente'; 
				{this.iniciar()};
				
		   }
		   
		   public function volver():void
		   {
		   	{iniciar()};
		   currentState = '';
		   labelMessage.text = 'Listado de productos actuales';
		   eliminar2.label = "Eliminar";
		   }
		   
		 /**
          * @Fecha  03 Octubre
          *@Descripcion Funcion que activa o desactiva el boton "Anular" del estado base
          *  cuando es seleccionado uno o mas tipos de producto.
          ***/
             
            private function Activar():void{
            	var filas:int = productosActivos.length;
            	var seleccion:Boolean=false;
            	var seleccion2:Boolean = false;
            	
            	for (var i:int = 0; i < filas; i++){
            		if(productosActivos[i].sel)
            		seleccion=true;
            	}
            	if(seleccion)
            		anularproduct.enabled=true;
            		else
            			anularproduct.enabled=false;
            			
            	if(this.currentState == 'VerDetalle'){
            		for (var j:int = 0; j < productosEspecificos.length; j++){
            			if(productosEspecificos[j].sel)
            				seleccion2=true;
            			}
            			if(seleccion2)
            				eliminar2.enabled=true;
            			else
            				eliminar2.enabled=false;
            		
            	}		
            }
            
           
             private function anularVarios2():void
            {
            	var ps:EliminarProductoService = new EliminarProductoService();
				ps.addEventListener(ResultEvent.RESULT,anularVariosResult);
				
				for(var i:int = 0; i < productosActivos.length; i++){
					if(productosActivos[i].sel){
					ps.eliminarVarios(productosActivos[i].nombre, productosActivos[i].precio, productosActivos[i].categoria, productosActivos[i].descripcion);
						
					}
					}
					
					{iniciar()};
				} 
            	
            public function anularVariosResult(event:ResultEvent):void
            {
            	var result:int = event.result as int ;
				if(result>0)
				{
				   labelMessage.text = 'Error al eliminar las Productos'; 
				}
				else labelMessage.text ='Productos eliminados correctamente'; 
				{getProductosActivosTipo()};
            }
            
           
        public function SeleccionarTodo():void
            {
            if(this.currentState != "VerDetalle" && this.currentState != "PugarRestaurar"){
            	for(i = 0; i< productosActivos.length; i++){
            		anularproduct.enabled= true
            		if(todo.selected == true){
            			
            			productosActivos[i].sel = true;
            		}
            			else{
            				productosActivos[i].sel = false;
            				anularproduct.enabled = false;
            			} 
            		
            	}
            }
            if(this.currentState == "VerDetalle"){
            	
           
            	for(i = 0; i< productosEspecificos.length; i++){
            		/* reactivar.enabled= true;
            		purgar.enabled = true; */
            		if(todo.selected == true){
            			productosEspecificos[i].sel = true;
            			eliminar2.enabled = true;
            		}
            			else{
            				eliminar2.enabled = false;
            				productosEspecificos[i].sel = false;
            			} 
            		
            	}
            }
            if(this.currentState == "PurgarRestaurar"){
            	
            	for(i = 0; i< productosInactivos.length; i++){
            		reactivar.enabled= true;
            		purgar.enabled = true; 
            		if(todo.selected == true){
            			productosInactivos[i].sel = true;
            		}
            			else{
            				productosInactivos[i].sel = false;
 							reactivar.enabled= false;
            				purgar.enabled = false;            				
            			} 
            		
            	}
            	
            }
            
            }
			public function irARegistro():void
			{
				Application.application.setInvisible();
				this.visible = false;
				Application.application.regProducto.visible = true;
				Application.application.opcionesPetshop.visible = true;
				
				Application.application.regProducto.nombre.text = nombre.text;
				Application.application.regProducto.precio.text = precio.text;
				Application.application.regProducto.categorias.selectedLabel.text = categoria.text;
				Application.application.regProducto.descripcion.text = descripcion.text;
				
			}
			
			 /**
			*  Corrige error de seleccionar el primero elemento del autocomplete
			*  Del textInput del nombre, precio, código de barra, descripción
			*  y categoría
			* */
		    public function Seleccionar(event:Event):void
			{
			    if(inputNombreProducto.selectedIndex==0)
			    {
			    	inputNombreProducto.text=inputNombreProducto.selectedLabel;
			    }
			    if(inputPrecio.selectedIndex==0)
			    {
			    	inputPrecio.text==inputPrecio.selectedLabel;
			    }
			    if(inputCategoria.selectedIndex==0)
			    {
			    	inputCategoria.text=inputCategoria.selectedLabel;
			    }
			    if(inputDescripcion.selectedIndex==0)
			    {
			    	inputDescripcion.text==inputDescripcion.selectedLabel;
			    }
			    if(inputCodigoBarra.selectedIndex==0)
			    {
			    	inputCodigoBarra.text=inputCodigoBarra.selectedLabel;
			    }

			}
			
		]]>
	</mx:Script>
	<!-- Opciones de busqueda -->
	<mx:ComboBox x="20.5" y="10" width="150" change="seleccionarBusqueda(event)" id="combobox">
		<mx:ArrayCollection>
			<mx:Object label="-Seleccionar-"/>
			<mx:Object label="Nombre Producto"/>
			<mx:Object label="Categoria"/>
			<mx:Object label="Codigo Barra"/> 
			<mx:Object label="Descripcion"/> 
			<mx:Object label="Precio"/> 
		</mx:ArrayCollection>
	</mx:ComboBox>
	<mx:Text x="550" y="10" text="Buscar" id="textBuscar" visible="false"/>
	
	<mx:states>
		<mx:State name="PurgarRestaurar">
			<mx:RemoveChild target="{anularproduct}"/>
			<mx:AddChild position="lastChild">
				<mx:Button x="538" y="368" label="Purgar" id="purgar" toolTip="Cuidado!!, esto eliminara los clientes seleccionados para siempre" width="102" height="23"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Button x="428" y="368" id="reactivar" label="Reactivar" width="102" height="23"/>
			</mx:AddChild>
			<mx:SetProperty target="{cancelar}" name="x" value="648"/>
			<mx:SetProperty target="{ver}" name="x" value="318"/>
			<mx:RemoveChild target="{dg}"/>
			<mx:AddChild position="lastChild">
				<mx:DataGrid x="20" y="113" width="718.5" id="dg2" height="248" dataProvider="{productosInactivos}">
						<mx:columns>
		<mx:DataGridColumn width="20" headerText="" dataField="checkbox" id="checkbox1" >
			 	<mx:itemRenderer>
                        <mx:Component>
                            <mx:CheckBox click="data.sel=!data.sel"  selected="{data.sel}"/>            
                        </mx:Component>
             	</mx:itemRenderer>
            </mx:DataGridColumn>
			<mx:DataGridColumn headerText="Cantidad" dataField="cantidad" width="80"/>
			<mx:DataGridColumn headerText="Nombre" dataField="nombre" width="120"/>
			<mx:DataGridColumn headerText="Descripción" dataField="descripcion" />
			<mx:DataGridColumn headerText="Precio" dataField="precio" width="70"/>
			<mx:DataGridColumn headerText="Categoria" dataField="categoria" width="70"/>
		</mx:columns>
				</mx:DataGrid>
			</mx:AddChild>
			<mx:RemoveChild target="{combobox}"/>
			<mx:RemoveChild target="{textBuscar}"/>
			<mx:RemoveChild target="{inputNombreProducto}"/>
			<mx:RemoveChild target="{inputPrecio}"/>
			<mx:RemoveChild target="{inputCategoria}"/>
			<mx:RemoveChild target="{inputCodigoBarra}"/>
			<mx:RemoveChild target="{inputDescripcion}"/>
		</mx:State>
		<mx:State name="VerDetalle">
			<mx:RemoveChild target="{ver}"/>
			<mx:RemoveChild target="{dg}"/>
			<mx:AddChild position="lastChild">
				<mx:Label x="20" y="76" text="Nombre:" fontWeight="bold"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:TextInput x="82" y="74" text="{dg.selectedItem.nombre}" enabled="false" id="nombre" width="168"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Label x="20" y="117" text="Stock:" fontWeight="bold"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Label x="342" y="74" text="Descripción:" fontWeight="bold" height="20"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:TextArea x="435" y="73" width="237" height="123" text="{dg.selectedItem.descripcion}" enabled="false" id="descripcion"/>
			</mx:AddChild>
			<mx:RemoveChild target="{anularproduct}"/>
			<mx:AddChild position="lastChild">
				<mx:Button x="537" y="370" label="Eliminar" width="102" click="{anularProducto()}" id="eliminar2" height="23"/>
			</mx:AddChild>
			<mx:SetProperty target="{cancelar}" name="label" value="Volver"/>
			<mx:AddChild position="lastChild">
				<mx:Button x="427" y="370" visible="false" label="Agregar" width="102" height="23" toolTip="Ir al registro para aumentar stock del producto" click="irARegistro()"/>
			</mx:AddChild>
			<mx:SetProperty target="{cancelar}" name="x" value="647"/>
			<mx:SetProperty target="{cancelar}" name="y" value="370"/>
			<mx:AddChild position="lastChild">
				<mx:Text x="84" y="131" text="{dg.selectedItem.precio}" visible="false" width="166" id="precio"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Text x="84" y="157" text="{dg.selectedItem.categoria}" visible="false" width="195" id="categoria"/>
			</mx:AddChild>
			<mx:RemoveChild target="{combobox}"/>
			<mx:RemoveChild target="{inputNombreProducto}"/>
			<mx:RemoveChild target="{inputPrecio}"/>
			<mx:RemoveChild target="{inputCategoria}"/>
			<mx:RemoveChild target="{inputCodigoBarra}"/>
			<mx:RemoveChild target="{inputDescripcion}"/>
			<mx:RemoveChild target="{textBuscar}"/>
			<mx:RemoveChild target="{label1}"/>
			<mx:RemoveChild target="{todo}"/>
			<mx:AddChild position="lastChild">
				<mx:Label x="10" y="25" text="Información del producto:" fontWeight="bold"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Label x="6" y="195" text="Eliminación:" fontWeight="bold"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Label x="20" y="251" text="Cantidad:" fontWeight="bold"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:NumericStepper x="87" y="249" id="canti" maximum="1000000"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:NumericStepper x="82" y="115" id="cant" value="{dg.selectedItem.cantidad}" maxHeight="100000" maximum="1000000"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
		
	<mx:Label x="169" y="399" width="407" height="17" id="labelMessage" textAlign="center" fontWeight="bold"/>
	<mx:Button x="541.5" y="368" enabled="false" label="Eliminar Todo" id="anularproduct" click="{anularVarios2()}"   toolTip="Anula todos los tipos de producto seleccionados" width="102" height="23"/>
	<mx:Button x="651.5" y="368" label="Cancelar" id="cancelar" toolTip="Volver a Productos" click="{volver()}"  width="102" height="23"/>
	<mx:CheckBox x="20.5" y="51" id="todo" click="{SeleccionarTodo()}"/>
	<mx:Label x="42.5" y="51" text="Seleccionar todo" id="label1"/>
	<mx:DataGrid x="20.5" y="77" width="718" height="281" id="dg" dataProvider="{productosActivos}" click="ver.enabled=true, Activar()" doubleClickEnabled="true" doubleClick="{pasarADetalle()}">
		<mx:columns>
		<mx:DataGridColumn width="20" headerText="" dataField="checkbox" id="checkbox" >
			 	<mx:itemRenderer>
                        <mx:Component>
                            <mx:CheckBox click="data.sel=!data.sel"  selected="{data.sel}"/>            
                        </mx:Component>
             	</mx:itemRenderer>
            </mx:DataGridColumn>
			<mx:DataGridColumn headerText="Cantidad" dataField="cantidad" width="80"/>
			<mx:DataGridColumn headerText="Nombre" dataField="nombre" width="120"/>
			<mx:DataGridColumn headerText="Código" dataField="codigo" width="120"/>
			<mx:DataGridColumn headerText="Descripción" dataField="descripcion" />
			<mx:DataGridColumn headerText="Precio" dataField="precio" width="70"/>
			<mx:DataGridColumn headerText="Categoría" dataField="categoria" width="70"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:Button x="431.5" y="368" label="Editar Stock" visible="true"  width="102" id="ver" click="{pasarADetalle()}" height="23"/>
	
	<!-- AutoComplete -->
	
	<!-- Nombre Del Producto -->
	<fc:AutoComplete id="inputNombreProducto" close="Seleccionar(event)"  x="599" y="8" width="150" dataProvider="{productosActivos}"  labelField="nombre" visible="false" toolTip="ingrese texto para búsqueda" />
	
	<!-- Precio -->
	<fc:AutoComplete id="inputPrecio" close="Seleccionar(event)" x="599" y="8" width="150" dataProvider="{productosActivos}" labelField="precio" visible="false" toolTip="ingrese texto para búsqueda"/>
	
	<!-- Categoria -->
	<fc:AutoComplete id="inputCategoria" close="Seleccionar(event)"  x="599" y="8" width="150" dataProvider="{productosActivos}" labelField="categoria" visible="false" toolTip="ingrese texto para búsqueda"/>
	
	<!-- Codigo de Barra -->
	<fc:AutoComplete id="inputCodigoBarra" close="Seleccionar(event)"  x="599" y="8" width="150" dataProvider="{productosActivos}" labelField="codigo" visible="false" toolTip="ingrese texto para búsqueda"/>
	
	<!-- Descripcion -->
	<fc:AutoComplete id="inputDescripcion" x="599" close="Seleccionar(event)" y="8" width="150" dataProvider="{productosActivos}" labelField="descripcion" visible="false" toolTip="ingrese texto para búsqueda"/>
	<mx:Label x="176" y="399" width="407" height="17" id="mens" fontWeight="bold" textAlign="center"/>
	
	
	
	
</mx:Panel>
